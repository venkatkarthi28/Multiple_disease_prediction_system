import os
import pickle
import streamlit as st
from streamlit_option_menu import option_menu
from streamlit_lottie import st_lottie
import requests
import numpy as np
import pandas as pd
from datetime import datetime
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from io import BytesIO

# Set page configuration
st.set_page_config(page_title="Health Assistant", layout="wide", page_icon="üßë‚Äç‚öïÔ∏è")

# Initialize session state
if 'language' not in st.session_state:
    st.session_state.language = 'English'
if 'theme' not in st.session_state:
    st.session_state.theme = 'Dark'

# ------------------------------------------------
# üåê Multilingual Support
# ------------------------------------------------
translations = {
    'English': {
        'title': "Multiple Disease Prediction System",
        'welcome': "Welcome to Health Assistant Dashboard",
        'predict_diseases': "This system can predict your risk of the following diseases:",
        'diabetes': "Diabetes",
        'heart_disease': "Heart Disease",
        'parkinsons': "Parkinson‚Äôs Disease",
        'enter_details': "Enter your medical details in the respective section and get instant insights along with personalized health tips!",
        'tip': "Tip: Regular exercise, a healthy diet, and enough sleep can prevent many chronic diseases.",
        'history': "Your Prediction History",
        'no_history': "No predictions saved yet.",
        'about_title': "About Health Assistant",
        'about_desc': "Health Assistant is an advanced, user-friendly tool designed to predict the risk of chronic diseases using machine learning models.",
        'diabetes_pred': "Diabetes Prediction using ML",
        'heart_pred': "Heart Disease Prediction using ML",
        'parkinsons_pred': "Parkinson's Disease Prediction using ML",
        'bmi_title': "Body Mass Index (BMI) Calculator",
        'bmi_desc': "Calculate your BMI to understand your body weight status.",
        'feedback_title': "Feedback & Support",
        'feedback_desc': "We value your input! Please share your feedback or report any issues.",
        'submit_feedback': "Submit Feedback",
        'feedback_success': "Thank you for your feedback!",
        'download_report': "Download Prediction Report",
        'input_order': "Enter the following in order:",
        'health_insights': "Health Insights",
        'risk_visualization': "Risk Visualization",
        'error_input': "Please enter valid numerical values for all fields.",
        'no_probability': "Probability estimates are not available for this model.",
        'What does MDVP:Fo(Hz) mean?': "What does MDVP:Fo(Hz) mean?",
        'It‚Äôs the fundamental frequency of your voice, used in Parkinson‚Äôs prediction.': "It‚Äôs the fundamental frequency of your voice, used in Parkinson‚Äôs prediction.",
        'How accurate are the predictions?': "How accurate are the predictions?",
        'The models provide estimates based on input data. Always consult a doctor for medical advice.': "The models provide estimates based on input data. Always consult a doctor for medical advice.",
        'How do I save my results?': "How do I save my results?",
        'Use the "Download Prediction Report" button after each prediction.': "Use the 'Download Prediction Report' button after each prediction.",
        'You have a': "You have a",
        'risk of Diabetes.': "risk of Diabetes.",
        'You are healthy! Low risk of Diabetes.': "You are healthy! Low risk of Diabetes.",
        'You have a significant risk of Diabetes.': "You have a significant risk of Diabetes.",
        'risk of Heart Disease.': "risk of Heart Disease.",
        'You are healthy! Low risk of Heart Disease.': "You are healthy! Low risk of Heart Disease.",
        'You have a significant risk of Heart Disease.': "You have a significant risk of Heart Disease.",
        'risk of Parkinson‚Äôs Disease.': "risk of Parkinson‚Äôs Disease.",
        'You are healthy! Low risk of Parkinson‚Äôs.': "You are healthy! Low risk of Parkinson‚Äôs.",
        'You have a significant risk of Parkinson‚Äôs Disease.': "You have a significant risk of Parkinson‚Äôs Disease.",
        'Diabetes Test Result': "Diabetes Test Result",
        'Heart Disease Test Result': "Heart Disease Test Result",
        'Parkinson‚Äôs Test Result': "Parkinson‚Äôs Test Result",
        'Analyzing your data...': "Analyzing your data...",
        'Risk Probability Chart': "Risk Probability Chart",
        'Probability (%)': "Probability (%)",
        'Diabetes Risk': "Diabetes Risk",
        'No Diabetes': "No Diabetes",
        'Diabetes Risk Probability': "Diabetes Risk Probability",
        'Heart Disease Risk': "Heart Disease Risk",
        'No Heart Disease': "No Heart Disease",
        'Heart Disease Risk Probability': "Heart Disease Risk Probability",
        'Parkinson‚Äôs Risk': "Parkinson‚Äôs Risk",
        'No Parkinson‚Äôs': "No Parkinson‚Äôs",
        'Parkinson‚Äôs Risk Probability': "Parkinson‚Äôs Risk Probability",
        'Please enter the value': "Please enter the value"
    },
    'Hindi': {
        'title': "‡§Æ‡§≤‡•ç‡§ü‡•Ä‡§™‡§≤ ‡§°‡§ø‡§ú‡•Ä‡§ú ‡§™‡•ç‡§∞‡•á‡§°‡§ø‡§ï‡•ç‡§∂‡§® ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ",
        'welcome': "‡§π‡•á‡§≤‡•ç‡§• ‡§Ö‡§∏‡§ø‡§∏‡•ç‡§ü‡•á‡§Ç‡§ü ‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§° ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à",
        'predict_diseases': "‡§Ø‡§π ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§®‡§ø‡§Æ‡•ç‡§®‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡•Ä ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à:",
        'diabetes': "‡§Æ‡§ß‡•Å‡§Æ‡•á‡§π",
        'heart_disease': "‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó",
        'parkinsons': "‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§∞‡•ã‡§ó",
        'enter_details': "‡§Ö‡§™‡§®‡•á ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§ï‡•ã ‡§∏‡§Ç‡§¨‡§Ç‡§ß‡§ø‡§§ ‡§Ö‡§®‡•Å‡§≠‡§æ‡§ó ‡§Æ‡•á‡§Ç ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§§‡§§‡•ç‡§ï‡§æ‡§≤ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§∏‡§æ‡§• ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç!",
        'tip': "‡§∏‡•Å‡§ù‡§æ‡§µ: ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ, ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§Ü‡§π‡§æ‡§∞ ‡§î‡§∞ ‡§™‡§∞‡•ç‡§Ø‡§æ‡§™‡•ç‡§§ ‡§®‡•Ä‡§Ç‡§¶ ‡§ï‡§à ‡§™‡•Å‡§∞‡§æ‡§®‡•Ä ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§∞‡•ã‡§ï ‡§∏‡§ï‡§§‡•Ä ‡§π‡•à‡•§",
        'history': "‡§Ü‡§™‡§ï‡§æ ‡§™‡•ç‡§∞‡•á‡§°‡§ø‡§ï‡•ç‡§∂‡§® ‡§á‡§§‡§ø‡§π‡§æ‡§∏",
        'no_history': "‡§Ö‡§≠‡•Ä ‡§§‡§ï ‡§ï‡•ã‡§à ‡§™‡•ç‡§∞‡•á‡§°‡§ø‡§ï‡•ç‡§∂‡§® ‡§∏‡§π‡•á‡§ú‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§ó‡§Ø‡§æ‡•§",
        'about_title': "‡§π‡•á‡§≤‡•ç‡§• ‡§Ö‡§∏‡§ø‡§∏‡•ç‡§ü‡•á‡§Ç‡§ü ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
        'about_desc': "‡§π‡•á‡§≤‡•ç‡§• ‡§Ö‡§∏‡§ø‡§∏‡•ç‡§ü‡•á‡§Ç‡§ü ‡§è‡§ï ‡§â‡§®‡•ç‡§®‡§§, ‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ-‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤ ‡§â‡§™‡§ï‡§∞‡§£ ‡§π‡•à ‡§ú‡•ã ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§Æ‡•â‡§°‡§≤‡•ç‡§∏ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§™‡•Å‡§∞‡§æ‡§®‡•Ä ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡•Ä ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§",
        'diabetes_pred': "‡§è‡§Æ‡§è‡§≤ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§Æ‡§ß‡•Å‡§Æ‡•á‡§π ‡§ï‡•Ä ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä",
        'heart_pred': "‡§è‡§Æ‡§è‡§≤ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§ï‡•Ä ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä",
        'parkinsons_pred': "‡§è‡§Æ‡§è‡§≤ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§∞‡•ã‡§ó ‡§ï‡•Ä ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä",
        'bmi_title': "‡§¨‡•â‡§°‡•Ä ‡§Æ‡§æ‡§∏ ‡§á‡§Ç‡§°‡•á‡§ï‡•ç‡§∏ (‡§¨‡•Ä‡§è‡§Æ‡§Ü‡§à) ‡§ï‡•à‡§≤‡§ï‡•Å‡§≤‡•á‡§ü‡§∞",
        'bmi_desc': "‡§Ö‡§™‡§®‡•á ‡§∂‡§∞‡•Ä‡§∞ ‡§ï‡•á ‡§µ‡§ú‡§® ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§™‡§®‡•á ‡§¨‡•Ä‡§è‡§Æ‡§Ü‡§à ‡§ï‡•Ä ‡§ó‡§£‡§®‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§",
        'feedback_title': "‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§î‡§∞ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§®",
        'feedback_desc': "‡§π‡§Æ ‡§Ü‡§™‡§ï‡•Ä ‡§∞‡§æ‡§Ø ‡§ï‡•ã ‡§Æ‡§π‡§§‡•ç‡§µ ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç! ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡•Ä ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§Ø‡§æ ‡§ï‡§ø‡§∏‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§ï‡•Ä ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç‡•§",
        'submit_feedback': "‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§∏‡§¨‡§Æ‡§ø‡§ü ‡§ï‡§∞‡•á‡§Ç",
        'feedback_success': "‡§Ü‡§™‡§ï‡•Ä ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶!",
        'download_report': "‡§™‡•ç‡§∞‡•á‡§°‡§ø‡§ï‡•ç‡§∂‡§® ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç",
        'input_order': "‡§®‡§ø‡§Æ‡•ç‡§®‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§ï‡•ã ‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç:",
        'health_insights': "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä",
        'risk_visualization': "‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§µ‡§ø‡§ú‡§º‡•Å‡§Ö‡§≤‡§æ‡§á‡§ú‡§º‡•á‡§∂‡§®",
        'error_input': "‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡§≠‡•Ä ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ‡§§‡•ç‡§Æ‡§ï ‡§Æ‡§æ‡§® ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç‡•§",
        'no_probability': "‡§á‡§∏ ‡§Æ‡•â‡§°‡§≤ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§® ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡§Ç‡•§",
        'What does MDVP:Fo(Hz) mean?': "MDVP:Fo(Hz) ‡§ï‡§æ ‡§ï‡•ç‡§Ø‡§æ ‡§Ö‡§∞‡•ç‡§• ‡§π‡•à?",
        'It‚Äôs the fundamental frequency of your voice, used in Parkinson‚Äôs prediction.': "‡§Ø‡§π ‡§Ü‡§™‡§ï‡•Ä ‡§Ü‡§µ‡§æ‡§ú ‡§ï‡•Ä ‡§Æ‡•Ç‡§≤ ‡§Ü‡§µ‡•É‡§§‡•ç‡§§‡§ø ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§ï‡•Ä ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§",
        'How accurate are the predictions?': "‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡§ø‡§Ø‡§æ‡§Ç ‡§ï‡§ø‡§§‡§®‡•Ä ‡§∏‡§ü‡•Ä‡§ï ‡§π‡•à‡§Ç?",
        'The models provide estimates based on input data. Always consult a doctor for medical advice.': "‡§Æ‡•â‡§°‡§≤ ‡§á‡§®‡§™‡•Å‡§ü ‡§°‡•á‡§ü‡§æ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§® ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§π‡§Æ‡•á‡§∂‡§æ ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡•Ä‡§Ø ‡§∏‡§≤‡§æ‡§π ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§∏‡•á ‡§™‡§∞‡§æ‡§Æ‡§∞‡•ç‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§",
        'How do I save my results?': "‡§Æ‡•à‡§Ç ‡§Ö‡§™‡§®‡•á ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ ‡§ï‡•à‡§∏‡•á ‡§∏‡§π‡•á‡§ú‡•Ç‡§Ç?",
        'Use the "Download Prediction Report" button after each prediction.': "‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä ‡§ï‡•á ‡§¨‡§æ‡§¶ '‡§™‡•ç‡§∞‡•á‡§°‡§ø‡§ï‡•ç‡§∂‡§® ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç' ‡§¨‡§ü‡§® ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§",
        'You have a': "‡§Ü‡§™‡§ï‡•ã ‡§π‡•à",
        'risk of Diabetes.': "‡§Æ‡§ß‡•Å‡§Æ‡•á‡§π ‡§ï‡§æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ‡•§",
        'You are healthy! Low risk of Diabetes.': "‡§Ü‡§™ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡§Ç! ‡§Æ‡§ß‡•Å‡§Æ‡•á‡§π ‡§ï‡§æ ‡§ï‡§Æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ‡•§",
        'You have a significant risk of Diabetes.': "‡§Ü‡§™‡§ï‡•ã ‡§Æ‡§ß‡•Å‡§Æ‡•á‡§π ‡§ï‡§æ ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§π‡•à‡•§",
        'risk of Heart Disease.': "‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§ï‡§æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ‡•§",
        'You are healthy! Low risk of Heart Disease.': "‡§Ü‡§™ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡§Ç! ‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§ï‡§æ ‡§ï‡§Æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ‡•§",
        'You have a significant risk of Heart Disease.': "‡§Ü‡§™‡§ï‡•ã ‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§ï‡§æ ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§π‡•à‡•§",
        'risk of Parkinson‚Äôs Disease.': "‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§∞‡•ã‡§ó ‡§ï‡§æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ‡•§",
        'You are healthy! Low risk of Parkinson‚Äôs.': "‡§Ü‡§™ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡§Ç! ‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§ï‡§æ ‡§ï‡§Æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ‡•§",
        'You have a significant risk of Parkinson‚Äôs Disease.': "‡§Ü‡§™‡§ï‡•ã ‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§∞‡•ã‡§ó ‡§ï‡§æ ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§π‡•à‡•§",
        'Diabetes Test Result': "‡§Æ‡§ß‡•Å‡§Æ‡•á‡§π ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§£ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ",
        'Heart Disease Test Result': "‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§£ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ",
        'Parkinson‚Äôs Test Result': "‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§£ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ",
        'Analyzing your data...': "‡§Ü‡§™‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...",
        'Risk Probability Chart': "‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ ‡§ö‡§æ‡§∞‡•ç‡§ü",
        'Probability (%)': "‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ (%)",
        'Diabetes Risk': "‡§Æ‡§ß‡•Å‡§Æ‡•á‡§π ‡§ú‡•ã‡§ñ‡§ø‡§Æ",
        'No Diabetes': "‡§ï‡•ã‡§à ‡§Æ‡§ß‡•Å‡§Æ‡•á‡§π ‡§®‡§π‡•Ä‡§Ç",
        'Diabetes Risk Probability': "‡§Æ‡§ß‡•Å‡§Æ‡•á‡§π ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ",
        'Heart Disease Risk': "‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§ú‡•ã‡§ñ‡§ø‡§Æ",
        'No Heart Disease': "‡§ï‡•ã‡§à ‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§®‡§π‡•Ä‡§Ç",
        'Heart Disease Risk Probability': "‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ",
        'Parkinson‚Äôs Risk': "‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§ú‡•ã‡§ñ‡§ø‡§Æ",
        'No Parkinson‚Äôs': "‡§ï‡•ã‡§à ‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§®‡§π‡•Ä‡§Ç",
        'Parkinson‚Äôs Risk Probability': "‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ",
        'Please enter the value': "‡§ï‡•É‡§™‡§Ø‡§æ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç"
    },
    'Tamil': {
        'title': "‡Æ™‡Æ≤ ‡Æ®‡Øã‡ÆØ‡Øç ‡Æï‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡ÆÖ‡ÆÆ‡Øà‡Æ™‡Øç‡Æ™‡ØÅ",
        'welcome': "‡Æπ‡ØÜ‡Æ≤‡Øç‡Æ§‡Øç ‡ÆÖ‡Æö‡Æø‡Æ∏‡Øç‡Æü‡Æ©‡Øç‡Æü‡Øç ‡Æü‡Ææ‡Æ∑‡Øç‡Æ™‡Øã‡Æ∞‡Øç‡Æü‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æµ‡Æ∞‡Æµ‡Øá‡Æ±‡Øç‡Æï‡Æø‡Æ±‡Øã‡ÆÆ‡Øç",
        'predict_diseases': "‡Æá‡Æ®‡Øç‡Æ§ ‡ÆÖ‡ÆÆ‡Øà‡Æ™‡Øç‡Æ™‡ØÅ ‡Æ™‡Æø‡Æ©‡Øç‡Æµ‡Æ∞‡ØÅ‡ÆÆ‡Øç ‡Æ®‡Øã‡ÆØ‡Øç‡Æï‡Æ≥‡Æø‡Æ©‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡Æ§‡Øç‡Æ§‡Øà ‡Æï‡Æ£‡Æø‡Æï‡Øç‡Æï ‡ÆÆ‡ØÅ‡Æü‡Æø‡ÆØ‡ØÅ‡ÆÆ‡Øç:",
        'diabetes': "‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ",
        'heart_disease': "‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç",
        'parkinsons': "‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Øç ‡Æ®‡Øã‡ÆØ‡Øç",
        'enter_details': "‡Æ§‡Øä‡Æü‡Æ∞‡Øç‡Æ™‡ØÅ‡Æü‡Øà‡ÆØ ‡Æ™‡Æø‡Æ∞‡Æø‡Æµ‡Æø‡Æ≤‡Øç ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÆ‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æµ ‡Æµ‡Æø‡Æµ‡Æ∞‡Æô‡Øç‡Æï‡Æ≥‡Øà ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æø‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æâ‡Æü‡Æ©‡Æü‡Æø ‡Æ§‡Æï‡Æµ‡Æ≤‡Øç‡Æï‡Æ≥‡ØÅ‡Æü‡Æ©‡Øç ‡Æ§‡Æ©‡Æø‡Æ™‡Øç‡Æ™‡ÆØ‡Æ©‡Ææ‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æâ‡Æü‡Æ≤‡Øç‡Æ®‡Æ≤ ‡Æï‡ØÅ‡Æ±‡Æø‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Æ≥‡Øà‡Æ™‡Øç ‡Æ™‡ØÜ‡Æ±‡Æµ‡ØÅ‡ÆÆ‡Øç!",
        'tip': "‡Æï‡ØÅ‡Æ±‡Æø‡Æ™‡Øç‡Æ™‡ØÅ: ‡Æµ‡Æ¥‡Æï‡Øç‡Æï‡ÆÆ‡Ææ‡Æ© ‡Æâ‡Æü‡Æ±‡Øç‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø, ‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æ© ‡Æâ‡Æ£‡Æµ‡ØÅ ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æ™‡Øã‡Æ§‡ØÅ‡ÆÆ‡Ææ‡Æ© ‡Æ§‡ØÇ‡Æï‡Øç‡Æï‡ÆÆ‡Øç ‡Æ™‡Æ≤ ‡Æ®‡Ææ‡Æü‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æ®‡Øã‡ÆØ‡Øç‡Æï‡Æ≥‡Øà‡Æ§‡Øç ‡Æ§‡Æü‡ØÅ‡Æï‡Øç‡Æï‡Æ≤‡Ææ‡ÆÆ‡Øç.",
        'history': "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æï‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡Æµ‡Æ∞‡Æ≤‡Ææ‡Æ±‡ØÅ",
        'no_history': "‡Æá‡Æ§‡ØÅ‡Æµ‡Æ∞‡Øà ‡Æé‡Æ®‡Øç‡Æ§ ‡Æï‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Æ≥‡ØÅ‡ÆÆ‡Øç ‡Æö‡Øá‡ÆÆ‡Æø‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Æµ‡Æø‡Æ≤‡Øç‡Æ≤‡Øà.",
        'about_title': "‡Æπ‡ØÜ‡Æ≤‡Øç‡Æ§‡Øç ‡ÆÖ‡Æö‡Æø‡Æ∏‡Øç‡Æü‡Æ©‡Øç‡Æü‡Øç ‡Æ™‡Æ±‡Øç‡Æ±‡Æø",
        'about_desc': "‡Æπ‡ØÜ‡Æ≤‡Øç‡Æ§‡Øç ‡ÆÖ‡Æö‡Æø‡Æ∏‡Øç‡Æü‡Æ©‡Øç‡Æü‡Øç ‡Æé‡Æ©‡Øç‡Æ™‡Æ§‡ØÅ ‡Æá‡ÆØ‡Æ®‡Øç‡Æ§‡Æø‡Æ∞ ‡Æï‡Æ±‡Øç‡Æ±‡Æ≤‡Øç ‡ÆÆ‡Ææ‡Æ§‡Æø‡Æ∞‡Æø‡Æï‡Æ≥‡Øà‡Æ™‡Øç ‡Æ™‡ÆØ‡Æ©‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡Æø ‡Æ®‡Ææ‡Æü‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æ®‡Øã‡ÆØ‡Øç‡Æï‡Æ≥‡Æø‡Æ©‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡Æ§‡Øç‡Æ§‡Øà ‡Æï‡Æ£‡Æø‡Æï‡Øç‡Æï ‡Æµ‡Æü‡Æø‡Æµ‡ÆÆ‡Øà‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡ÆÆ‡Øá‡ÆÆ‡Øç‡Æ™‡Æü‡Øç‡Æü, ‡Æ™‡ÆØ‡Æ©‡Æ∞‡Øç-‡Æ®‡Æü‡Øç‡Æ™‡ØÅ ‡Æï‡Æ∞‡ØÅ‡Æµ‡Æø‡ÆØ‡Ææ‡Æï‡ØÅ‡ÆÆ‡Øç.",
        'diabetes_pred': "‡Æé‡ÆÆ‡Øç‡Æé‡Æ≤‡Øç ‡ÆÆ‡ØÇ‡Æ≤‡ÆÆ‡Øç ‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡Æï‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡ØÅ",
        'heart_pred': "‡Æé‡ÆÆ‡Øç‡Æé‡Æ≤‡Øç ‡ÆÆ‡ØÇ‡Æ≤‡ÆÆ‡Øç ‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç ‡Æï‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡ØÅ",
        'parkinsons_pred': "‡Æé‡ÆÆ‡Øç‡Æé‡Æ≤‡Øç ‡ÆÆ‡ØÇ‡Æ≤‡ÆÆ‡Øç ‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Øç ‡Æ®‡Øã‡ÆØ‡Øç ‡Æï‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡ØÅ",
        'bmi_title': "‡Æâ‡Æü‡Æ≤‡Øç ‡Æ®‡Æø‡Æ±‡Øà ‡Æï‡ØÅ‡Æ±‡Æø‡ÆØ‡ØÄ‡Æü‡Øç‡Æü‡ØÅ (‡Æ™‡Æø‡Æé‡ÆÆ‡Øç‡Æê) ‡Æï‡Ææ‡Æ≤‡Øç‡Æï‡ØÅ‡Æ≤‡Øá‡Æü‡Øç‡Æü‡Æ∞‡Øç",
        'bmi_desc': "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æâ‡Æü‡Æ≤‡Øç ‡Æé‡Æü‡Øà ‡Æ®‡Æø‡Æ≤‡Øà‡ÆØ‡Øà‡Æ™‡Øç ‡Æ™‡ØÅ‡Æ∞‡Æø‡Æ®‡Øç‡Æ§‡ØÅ‡Æï‡Øä‡Æ≥‡Øç‡Æ≥ ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ™‡Æø‡Æé‡ÆÆ‡Øç‡Æê-‡Æê ‡Æï‡Æ£‡Æï‡Øç‡Æï‡Æø‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'feedback_title': "‡Æï‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡ÆÜ‡Æ§‡Æ∞‡Æµ‡ØÅ",
        'feedback_desc': "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æï‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡Øà ‡Æ®‡Ææ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÆ‡Æ§‡Æø‡Æï‡Øç‡Æï‡Æø‡Æ±‡Øã‡ÆÆ‡Øç! ‡Æ§‡ÆØ‡Æµ‡ØÅ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡ØÅ ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æï‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡Øà‡Æ™‡Øç ‡Æ™‡Æï‡Æø‡Æ∞‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ ‡Æè‡Æ§‡Øá‡Æ©‡ØÅ‡ÆÆ‡Øç ‡Æö‡Æø‡Æï‡Øç‡Æï‡Æ≤‡Øç‡Æï‡Æ≥‡Øà‡Æ™‡Øç ‡Æ™‡ØÅ‡Æï‡Ææ‡Æ∞‡Æ≥‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'submit_feedback': "‡Æï‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡Øà ‡Æö‡ÆÆ‡Æ∞‡Øç‡Æ™‡Øç‡Æ™‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç",
        'feedback_success': "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æï‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æ®‡Æ©‡Øç‡Æ±‡Æø!",
        'download_report': "‡Æï‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡ÆÖ‡Æ±‡Æø‡Æï‡Øç‡Æï‡Øà‡ÆØ‡Øà‡Æ™‡Øç ‡Æ™‡Æ§‡Æø‡Æµ‡Æø‡Æ±‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç",
        'input_order': "‡Æ™‡Æø‡Æ©‡Øç‡Æµ‡Æ∞‡ØÅ‡Æµ‡Æ©‡Æµ‡Æ±‡Øç‡Æ±‡Øà ‡Æµ‡Æ∞‡Æø‡Æö‡Øà‡ÆØ‡Æø‡Æ≤‡Øç ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æø‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç:",
        'health_insights': "‡Æâ‡Æü‡Æ≤‡Øç‡Æ®‡Æ≤ ‡Æ§‡Æï‡Æµ‡Æ≤‡Øç‡Æï‡Æ≥‡Øç",
        'risk_visualization': "‡ÆÖ‡Æ™‡Ææ‡ÆØ ‡Æï‡Ææ‡Æü‡Øç‡Æö‡Æø‡Æ™‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡Æ≤‡Øç",
        'error_input': "‡Æé‡Æ≤‡Øç‡Æ≤‡Ææ ‡Æ™‡ØÅ‡Æ≤‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ‡ÆÆ‡Øç ‡Æö‡ØÜ‡Æ≤‡Øç‡Æ≤‡ØÅ‡Æ™‡Æü‡Æø‡ÆØ‡Ææ‡Æï‡ØÅ‡ÆÆ‡Øç ‡Æé‡Æ£‡Øç‡Æ£‡Æø‡ÆØ‡Æ≤‡Øç ‡ÆÆ‡Æ§‡Æø‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Æ≥‡Øà ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æø‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'no_probability': "‡Æá‡Æ®‡Øç‡Æ§ ‡ÆÆ‡Ææ‡Æ§‡Æø‡Æ∞‡Æø‡Æï‡Øç‡Æï‡ØÅ ‡Æ®‡Æø‡Æï‡Æ¥‡Øç‡Æ§‡Æï‡Æµ‡ØÅ ‡ÆÆ‡Æ§‡Æø‡Æ™‡Øç‡Æ™‡ØÄ‡Æü‡ØÅ‡Æï‡Æ≥‡Øç ‡Æï‡Æø‡Æü‡Øà‡Æï‡Øç‡Æï‡Æµ‡Æø‡Æ≤‡Øç‡Æ≤‡Øà.",
        'What does MDVP:Fo(Hz) mean?': "MDVP:Fo(Hz) ‡Æé‡Æ©‡Øç‡Æ±‡Ææ‡Æ≤‡Øç ‡Æé‡Æ©‡Øç‡Æ©?",
        'It‚Äôs the fundamental frequency of your voice, used in Parkinson‚Äôs prediction.': "‡Æá‡Æ§‡ØÅ ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æï‡ØÅ‡Æ∞‡Æ≤‡Æø‡Æ©‡Øç ‡ÆÖ‡Æü‡Æø‡Æ™‡Øç‡Æ™‡Æü‡Øà ‡ÆÖ‡Æ§‡Æø‡Æ∞‡Øç‡Æµ‡ØÜ‡Æ£‡Øç, ‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Øç ‡Æï‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡Æø‡Æ≤‡Øç ‡Æ™‡ÆØ‡Æ©‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡Æ™‡Øç‡Æ™‡Æü‡ØÅ‡Æï‡Æø‡Æ±‡Æ§‡ØÅ.",
        'How accurate are the predictions?': "‡Æï‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Æ≥‡Øç ‡Æé‡Æµ‡Øç‡Æµ‡Æ≥‡Æµ‡ØÅ ‡Æ§‡ØÅ‡Æ≤‡Øç‡Æ≤‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æ©‡Æµ‡Øà?",
        'The models provide estimates based on input data. Always consult a doctor for medical advice.': "‡ÆÆ‡Ææ‡Æ§‡Æø‡Æ∞‡Æø‡Æï‡Æ≥‡Øç ‡Æâ‡Æ≥‡Øç‡Æ≥‡ØÄ‡Æü‡Øç‡Æü‡ØÅ ‡Æ§‡Æ∞‡Æµ‡Æø‡Æ©‡Øç ‡ÆÖ‡Æü‡Æø‡Æ™‡Øç‡Æ™‡Æü‡Øà‡ÆØ‡Æø‡Æ≤‡Øç ‡ÆÆ‡Æ§‡Æø‡Æ™‡Øç‡Æ™‡ØÄ‡Æü‡ØÅ‡Æï‡Æ≥‡Øà ‡Æµ‡Æ¥‡Æô‡Øç‡Æï‡ØÅ‡Æï‡Æø‡Æ©‡Øç‡Æ±‡Æ©. ‡ÆÆ‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æµ ‡ÆÜ‡Æ≤‡Øã‡Æö‡Æ©‡Øà‡Æï‡Øç‡Æï‡ØÅ ‡Æé‡Æ™‡Øç‡Æ™‡Øã‡Æ§‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æµ‡Æ∞‡Øà ‡ÆÖ‡Æ£‡ØÅ‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'How do I save my results?': "‡Æé‡Æ©‡Æ§‡ØÅ ‡ÆÆ‡ØÅ‡Æü‡Æø‡Æµ‡ØÅ‡Æï‡Æ≥‡Øà ‡Æé‡Æµ‡Øç‡Æµ‡Ææ‡Æ±‡ØÅ ‡Æö‡Øá‡ÆÆ‡Æø‡Æ™‡Øç‡Æ™‡Æ§‡ØÅ?",
        'Use the "Download Prediction Report" button after each prediction.': "‡Æí‡Æµ‡Øç‡Æµ‡Øä‡Æ∞‡ØÅ ‡Æï‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Øç‡Æï‡ØÅ‡Æ™‡Øç ‡Æ™‡Æø‡Æ±‡Æï‡ØÅ '‡Æï‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡ÆÖ‡Æ±‡Æø‡Æï‡Øç‡Æï‡Øà‡ÆØ‡Øà‡Æ™‡Øç ‡Æ™‡Æ§‡Æø‡Æµ‡Æø‡Æ±‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç' ‡Æ™‡Øä‡Æ§‡Øç‡Æ§‡Ææ‡Æ©‡Øà‡Æ™‡Øç ‡Æ™‡ÆØ‡Æ©‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'You have a': "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ",
        'risk of Diabetes.': "‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç.",
        'You are healthy! Low risk of Diabetes.': "‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç! ‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡ØÅ‡Æ±‡Øà‡Æµ‡ØÅ.",
        'You have a significant risk of Diabetes.': "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡Æ£‡Æø‡Æö‡ÆÆ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ.",
        'risk of Heart Disease.': "‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç.",
        'You are healthy! Low risk of Heart Disease.': "‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç! ‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡ØÅ‡Æ±‡Øà‡Æµ‡ØÅ.",
        'You have a significant risk of Heart Disease.': "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡Æ£‡Æø‡Æö‡ÆÆ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ.",
        'risk of Parkinson‚Äôs Disease.': "‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Øç ‡Æ®‡Øã‡ÆØ‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç.",
        'You are healthy! Low risk of Parkinson‚Äôs.': "‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç! ‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡ØÅ‡Æ±‡Øà‡Æµ‡ØÅ.",
        'You have a significant risk of Parkinson‚Äôs Disease.': "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Øç ‡Æ®‡Øã‡ÆØ‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡Æ£‡Æø‡Æö‡ÆÆ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ.",
        'Diabetes Test Result': "‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡Æ™‡Æ∞‡Æø‡Æö‡Øã‡Æ§‡Æ©‡Øà ‡ÆÆ‡ØÅ‡Æü‡Æø‡Æµ‡ØÅ",
        'Heart Disease Test Result': "‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç ‡Æ™‡Æ∞‡Æø‡Æö‡Øã‡Æ§‡Æ©‡Øà ‡ÆÆ‡ØÅ‡Æü‡Æø‡Æµ‡ØÅ",
        'Parkinson‚Äôs Test Result': "‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Øç ‡Æ™‡Æ∞‡Æø‡Æö‡Øã‡Æ§‡Æ©‡Øà ‡ÆÆ‡ØÅ‡Æü‡Æø‡Æµ‡ØÅ",
        'Analyzing your data...': "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ§‡Æ∞‡Æµ‡Øà ‡Æ™‡Æï‡ØÅ‡Æ™‡Øç‡Æ™‡Ææ‡ÆØ‡Øç‡Æµ‡ØÅ ‡Æö‡ØÜ‡ÆØ‡Øç‡Æï‡Æø‡Æ±‡Æ§‡ØÅ...",
        'Risk Probability Chart': "‡ÆÖ‡Æ™‡Ææ‡ÆØ ‡Æ®‡Æø‡Æï‡Æ¥‡Øç‡Æ§‡Æï‡Æµ‡ØÅ ‡Æµ‡Æø‡Æ≥‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡ÆÆ‡Øç",
        'Probability (%)': "‡Æ®‡Æø‡Æï‡Æ¥‡Øç‡Æ§‡Æï‡Æµ‡ØÅ (%)",
        'Diabetes Risk': "‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç",
        'No Diabetes': "‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡Æá‡Æ≤‡Øç‡Æ≤‡Øà",
        'Diabetes Risk Probability': "‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡ÆÖ‡Æ™‡Ææ‡ÆØ ‡Æ®‡Æø‡Æï‡Æ¥‡Øç‡Æ§‡Æï‡Æµ‡ØÅ",
        'Heart Disease Risk': "‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç",
        'No Heart Disease': "‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç ‡Æá‡Æ≤‡Øç‡Æ≤‡Øà",
        'Heart Disease Risk Probability': "‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ ‡Æ®‡Æø‡Æï‡Æ¥‡Øç‡Æ§‡Æï‡Æµ‡ØÅ",
        'Parkinson‚Äôs Risk': "‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç",
        'No Parkinson‚Äôs': "‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Øç ‡Æá‡Æ≤‡Øç‡Æ≤‡Øà",
        'Parkinson‚Äôs Risk Probability': "‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ ‡Æ®‡Æø‡Æï‡Æ¥‡Øç‡Æ§‡Æï‡Æµ‡ØÅ",
        'Please enter the value': "‡Æ§‡ÆØ‡Æµ‡ØÅ ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡ØÅ ‡ÆÆ‡Æ§‡Æø‡Æ™‡Øç‡Æ™‡Øà ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æø‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç"
    }
}

input_translations = {
    'English': {
        'Pregnancies': 'Pregnancies',
        'Glucose': 'Glucose',
        'Blood Pressure': 'Blood Pressure',
        'Skin Thickness': 'Skin Thickness',
        'Insulin': 'Insulin',
        'BMI': 'BMI',
        'Diabetes Pedigree Function': 'Diabetes Pedigree Function',
        'Age': 'Age',
        'Sex': 'Sex',
        'Chest Pain types': 'Chest Pain types',
        'Resting Blood Pressure': 'Resting Blood Pressure',
        'Serum Cholestoral': 'Serum Cholestoral',
        'Fasting Blood Sugar': 'Fasting Blood Sugar',
        'Resting ECG': 'Resting ECG',
        'Maximum Heart Rate': 'Maximum Heart Rate',
        'Exercise Induced Angina': 'Exercise Induced Angina',
        'ST depression': 'ST depression',
        'Slope of ST segment': 'Slope of ST segment',
        'Major vessels': 'Major vessels',
        'Thalassemia': 'Thalassemia',
        'MDVP:Fo(Hz)': 'MDVP:Fo(Hz)',
        'MDVP:Fhi(Hz)': 'MDVP:Fhi(Hz)',
        'MDVP:Flo(Hz)': 'MDVP:Flo(Hz)',
        'MDVP:Jitter(%)': 'MDVP:Jitter(%)',
        'MDVP:Jitter(Abs)': 'MDVP:Jitter(Abs)',
        'MDVP:RAP': 'MDVP:RAP',
        'MDVP:PPQ': 'MDVP:PPQ',
        'Jitter:DDP': 'Jitter:DDP',
        'MDVP:Shimmer': 'MDVP:Shimmer',
        'MDVP:Shimmer(dB)': 'MDVP:Shimmer(dB)',
        'Shimmer:APQ3': 'Shimmer:APQ3',
        'Shimmer:APQ5': 'Shimmer:APQ5',
        'MDVP:APQ': 'MDVP:APQ',
        'Shimmer:DDA': 'Shimmer:DDA',
        'NHR': 'NHR',
        'HNR': 'HNR',
        'RPDE': 'RPDE',
        'DFA': 'DFA',
        'spread1': 'spread1',
        'spread2': 'spread2',
        'D2': 'D2',
        'PPE': 'PPE',
        'Height (cm):': 'Height (cm):',
        'Weight (kg):': 'Weight (kg):',
        'Calculate BMI': 'Calculate BMI',
        'Your BMI is:': 'Your BMI is:',
        'You are underweight. Eat nutrient-rich foods üçûüçó': 'You are underweight. Eat nutrient-rich foods üçûüçó',
        'You are healthy! Keep maintaining a balanced diet ü•ó': 'You are healthy! Keep maintaining a balanced diet ü•ó',
        'You are overweight. Exercise regularly üèÉ‚Äç‚ôÇÔ∏è': 'You are overweight. Exercise regularly üèÉ‚Äç‚ôÇÔ∏è',
        'You are obese. Please consult a doctor and plan weight management ‚öïÔ∏è': 'You are obese. Please consult a doctor and plan weight management ‚öïÔ∏è'
    },
    'Hindi': {
        'Pregnancies': '‡§ó‡§∞‡•ç‡§≠‡§æ‡§µ‡§∏‡•ç‡§•‡§æ',
        'Glucose': '‡§ó‡•ç‡§≤‡•Ç‡§ï‡•ã‡§ú',
        'Blood Pressure': '‡§∞‡§ï‡•ç‡§§‡§ö‡§æ‡§™',
        'Skin Thickness': '‡§§‡•ç‡§µ‡§ö‡§æ ‡§ï‡•Ä ‡§Æ‡•ã‡§ü‡§æ‡§à',
        'Insulin': '‡§á‡§Ç‡§∏‡•Å‡§≤‡§ø‡§®',
        'BMI': '‡§¨‡•Ä‡§è‡§Æ‡§Ü‡§à',
        'Diabetes Pedigree Function': '‡§Æ‡§ß‡•Å‡§Æ‡•á‡§π ‡§µ‡§Ç‡§∂‡§æ‡§µ‡§≤‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§Ø',
        'Age': '‡§Ü‡§Ø‡•Å',
        'Sex': '‡§≤‡§ø‡§Ç‡§ó',
        'Chest Pain types': '‡§∏‡•Ä‡§®‡•á ‡§Æ‡•á‡§Ç ‡§¶‡§∞‡•ç‡§¶ ‡§ï‡•á ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞',
        'Resting Blood Pressure': '‡§µ‡§ø‡§∂‡•ç‡§∞‡§æ‡§Æ ‡§∞‡§ï‡•ç‡§§‡§ö‡§æ‡§™',
        'Serum Cholestoral': '‡§∏‡•Ä‡§∞‡§Æ ‡§ï‡•ã‡§≤‡•á‡§∏‡•ç‡§ü‡•ç‡§∞‡•â‡§≤',
        'Fasting Blood Sugar': '‡§â‡§™‡§µ‡§æ‡§∏ ‡§∞‡§ï‡•ç‡§§ ‡§∂‡§∞‡•ç‡§ï‡§∞‡§æ',
        'Resting ECG': '‡§µ‡§ø‡§∂‡•ç‡§∞‡§æ‡§Æ ‡§à‡§∏‡•Ä‡§ú‡•Ä',
        'Maximum Heart Rate': '‡§Ö‡§ß‡§ø‡§ï‡§§‡§Æ ‡§π‡•É‡§¶‡§Ø ‡§ó‡§§‡§ø',
        'Exercise Induced Angina': '‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ ‡§™‡•ç‡§∞‡•á‡§∞‡§ø‡§§ ‡§è‡§®‡§ú‡§æ‡§á‡§®‡§æ',
        'ST depression': '‡§è‡§∏‡§ü‡•Ä ‡§Ö‡§µ‡§∏‡§æ‡§¶',
        'Slope of ST segment': '‡§è‡§∏‡§ü‡•Ä ‡§ñ‡§Ç‡§° ‡§ï‡§æ ‡§¢‡§≤‡§æ‡§®',
        'Major vessels': '‡§™‡•ç‡§∞‡§Æ‡•Å‡§ñ ‡§∞‡§ï‡•ç‡§§ ‡§µ‡§æ‡§π‡§ø‡§ï‡§æ‡§è‡§Ç',
        'Thalassemia': '‡§•‡•à‡§≤‡•á‡§∏‡•Ä‡§Æ‡§ø‡§Ø‡§æ',
        'MDVP:Fo(Hz)': '‡§è‡§Æ‡§°‡•Ä‡§µ‡•Ä‡§™‡•Ä:‡§è‡§´‡§ì(‡§π‡§∞‡•ç‡§ü‡•ç‡§ú)',
        'MDVP:Fhi(Hz)': '‡§è‡§Æ‡§°‡•Ä‡§µ‡•Ä‡§™‡•Ä:‡§è‡§´‡§è‡§ö‡§Ü‡§à(‡§π‡§∞‡•ç‡§ü‡•ç‡§ú)',
        'MDVP:Flo(Hz)': '‡§è‡§Æ‡§°‡•Ä‡§µ‡•Ä‡§™‡•Ä:‡§è‡§´‡§è‡§≤‡§ì(‡§π‡§∞‡•ç‡§ü‡•ç‡§ú)',
        'MDVP:Jitter(%)': '‡§è‡§Æ‡§°‡•Ä‡§µ‡•Ä‡§™‡•Ä:‡§ú‡§ø‡§ü‡§∞(%)',
        'MDVP:Jitter(Abs)': '‡§è‡§Æ‡§°‡•Ä‡§µ‡•Ä‡§™‡•Ä:‡§ú‡§ø‡§ü‡§∞(‡§è‡§¨‡•ç‡§∏)',
        'MDVP:RAP': '‡§è‡§Æ‡§°‡•Ä‡§µ‡•Ä‡§™‡•Ä:‡§∞‡•à‡§™',
        'MDVP:PPQ': '‡§è‡§Æ‡§°‡•Ä‡§µ‡•Ä‡§™‡•Ä:‡§™‡•Ä‡§™‡•Ä‡§ï‡•ç‡§Ø‡•Ç',
        'Jitter:DDP': '‡§ú‡§ø‡§ü‡§∞:‡§°‡•Ä‡§°‡•Ä‡§™‡•Ä',
        'MDVP:Shimmer': '‡§è‡§Æ‡§°‡•Ä‡§µ‡•Ä‡§™‡•Ä:‡§∂‡§ø‡§Æ‡§∞',
        'MDVP:Shimmer(dB)': '‡§è‡§Æ‡§°‡•Ä‡§µ‡•Ä‡§™‡•Ä:‡§∂‡§ø‡§Æ‡§∞(‡§°‡•Ä‡§¨‡•Ä)',
        'Shimmer:APQ3': '‡§∂‡§ø‡§Æ‡§∞:‡§è‡§™‡•Ä‡§ï‡•ç‡§Ø‡•Ç3',
        'Shimmer:APQ5': '‡§∂‡§ø‡§Æ‡§∞:‡§è‡§™‡•Ä‡§ï‡•ç‡§Ø‡•Ç5',
        'MDVP:APQ': '‡§è‡§Æ‡§°‡•Ä‡§µ‡•Ä‡§™‡•Ä:‡§è‡§™‡•Ä‡§ï‡•ç‡§Ø‡•Ç',
        'Shimmer:DDA': '‡§∂‡§ø‡§Æ‡§∞:‡§°‡•Ä‡§°‡•Ä‡§è',
        'NHR': '‡§è‡§®‡§è‡§ö‡§Ü‡§∞',
        'HNR': '‡§è‡§ö‡§è‡§®‡§Ü‡§∞',
        'RPDE': '‡§Ü‡§∞‡§™‡•Ä‡§°‡•Ä‡§à',
        'DFA': '‡§°‡•Ä‡§è‡§´‡§è',
        'spread1': '‡§∏‡•ç‡§™‡•ç‡§∞‡•á‡§°1',
        'spread2': '‡§∏‡•ç‡§™‡•ç‡§∞‡•á‡§°2',
        'D2': '‡§°‡•Ä2',
        'PPE': '‡§™‡•Ä‡§™‡•Ä‡§à',
        'Height (cm):': '‡§ä‡§Ç‡§ö‡§æ‡§à (‡§∏‡•á‡§Æ‡•Ä):',
        'Weight (kg):': '‡§µ‡§ú‡§® (‡§ï‡§ø‡§ó‡•ç‡§∞‡§æ):',
        'Calculate BMI': '‡§¨‡•Ä‡§è‡§Æ‡§Ü‡§à ‡§ï‡•Ä ‡§ó‡§£‡§®‡§æ ‡§ï‡§∞‡•á‡§Ç',
        'Your BMI is:': '‡§Ü‡§™‡§ï‡§æ ‡§¨‡•Ä‡§è‡§Æ‡§Ü‡§à ‡§π‡•à:',
        'You are underweight. Eat nutrient-rich foods üçûüçó': '‡§Ü‡§™‡§ï‡§æ ‡§µ‡§ú‡§® ‡§ï‡§Æ ‡§π‡•à‡•§ ‡§™‡•ã‡§∑‡§ï ‡§§‡§§‡•ç‡§µ‡•ã‡§Ç ‡§∏‡•á ‡§≠‡§∞‡§™‡•Ç‡§∞ ‡§≠‡•ã‡§ú‡§® ‡§ï‡§∞‡•á‡§Ç üçûüçó',
        'You are healthy! Keep maintaining a balanced diet ü•ó': '‡§Ü‡§™ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡§Ç! ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§Ü‡§π‡§æ‡§∞ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç ü•ó',
        'You are overweight. Exercise regularly üèÉ‚Äç‚ôÇÔ∏è': '‡§Ü‡§™‡§ï‡§æ ‡§µ‡§ú‡§® ‡§Ö‡§ß‡§ø‡§ï ‡§π‡•à‡•§ ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ ‡§ï‡§∞‡•á‡§Ç üèÉ‚Äç‚ôÇÔ∏è',
        'You are obese. Please consult a doctor and plan weight management ‚öïÔ∏è': '‡§Ü‡§™ ‡§Æ‡•ã‡§ü‡§æ‡§™‡•á ‡§∏‡•á ‡§ó‡•ç‡§∞‡§∏‡•ç‡§§ ‡§π‡•à‡§Ç‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§∏‡•á ‡§™‡§∞‡§æ‡§Æ‡§∞‡•ç‡§∂ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§µ‡§ú‡§® ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§ï‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§¨‡§®‡§æ‡§è‡§Ç ‚öïÔ∏è'
    },
    'Tamil': {
        'Pregnancies': '‡Æï‡Æ∞‡Øç‡Æ™‡Øç‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Øç',
        'Glucose': '‡Æï‡ØÅ‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡Øã‡Æ∏‡Øç',
        'Blood Pressure': '‡Æá‡Æ∞‡Æ§‡Øç‡Æ§ ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§‡ÆÆ‡Øç',
        'Skin Thickness': '‡Æ§‡Øã‡Æ≤‡Øç ‡Æ§‡Æü‡Æø‡ÆÆ‡Æ©‡Øç',
        'Insulin': '‡Æá‡Æ©‡Øç‡Æö‡ØÅ‡Æ≤‡Æø‡Æ©‡Øç',
        'BMI': '‡Æ™‡Æø‡Æé‡ÆÆ‡Øç‡Æê',
        'Diabetes Pedigree Function': '‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡Æµ‡ÆÆ‡Øç‡Æö‡Ææ‡Æµ‡Æ≥‡Æø ‡Æö‡ØÜ‡ÆØ‡Æ≤‡Øç‡Æ™‡Ææ‡Æü‡ØÅ',
        'Age': '‡Æµ‡ÆØ‡Æ§‡ØÅ',
        'Sex': '‡Æ™‡Ææ‡Æ≤‡Æø‡Æ©‡ÆÆ‡Øç',
        'Chest Pain types': '‡ÆÆ‡Ææ‡Æ∞‡Øç‡Æ™‡ØÅ ‡Æµ‡Æ≤‡Æø ‡Æµ‡Æï‡Øà‡Æï‡Æ≥‡Øç',
        'Resting Blood Pressure': '‡Æì‡ÆØ‡Øç‡Æµ‡ØÅ ‡Æá‡Æ∞‡Æ§‡Øç‡Æ§ ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§‡ÆÆ‡Øç',
        'Serum Cholestoral': '‡Æö‡ØÄ‡Æ∞‡ÆÆ‡Øç ‡Æï‡Øä‡Æ≤‡Æ∏‡Øç‡Æü‡Øç‡Æ∞‡Ææ‡Æ≤‡Øç',
        'Fasting Blood Sugar': '‡Æ®‡Øã‡Æ©‡Øç‡Æ™‡ØÅ ‡Æá‡Æ∞‡Æ§‡Øç‡Æ§ ‡Æö‡Æ∞‡Øç‡Æï‡Øç‡Æï‡Æ∞‡Øà',
        'Resting ECG': '‡Æì‡ÆØ‡Øç‡Æµ‡ØÅ ‡Æá‡Æö‡Æø‡Æú‡Æø',
        'Maximum Heart Rate': '‡ÆÖ‡Æ§‡Æø‡Æï‡Æ™‡Æü‡Øç‡Æö ‡Æá‡Æ§‡ÆØ ‡Æ§‡ØÅ‡Æü‡Æø‡Æ™‡Øç‡Æ™‡ØÅ',
        'Exercise Induced Angina': '‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø‡ÆØ‡Ææ‡Æ≤‡Øç ‡Æ§‡ØÇ‡Æ£‡Øç‡Æü‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡ÆÜ‡Æû‡Øç‡Æö‡Æø‡Æ©‡Ææ',
        'ST depression': '‡Æé‡Æ∏‡Øç‡Æü‡Æø ‡ÆÆ‡Æ©‡Æö‡Øç‡Æö‡Øã‡Æ∞‡Øç‡Æµ‡ØÅ',
        'Slope of ST segment': '‡Æé‡Æ∏‡Øç‡Æü‡Æø ‡Æ™‡Æø‡Æ∞‡Æø‡Æµ‡Æø‡Æ©‡Øç ‡Æö‡Ææ‡ÆØ‡Øç‡Æµ‡ØÅ',
        'Major vessels': '‡ÆÆ‡ØÅ‡Æï‡Øç‡Æï‡Æø‡ÆØ ‡Æá‡Æ∞‡Æ§‡Øç‡Æ§ ‡Æ®‡Ææ‡Æ≥‡Æô‡Øç‡Æï‡Æ≥‡Øç',
        'Thalassemia': '‡Æ§‡Æ≤‡Æö‡ØÄ‡ÆÆ‡Æø‡ÆØ‡Ææ',
        'MDVP:Fo(Hz)': '‡Æé‡ÆÆ‡Øç‡Æü‡Æø‡Æµ‡Æø‡Æ™‡Æø:‡Æé‡ÆÉ‡Æ™‡Øç‡Æí(‡Æπ‡ØÜ‡Æ∞‡Øç‡Æü‡Øç‡Æ∏‡Øç)',
        'MDVP:Fhi(Hz)': '‡Æé‡ÆÆ‡Øç‡Æü‡Æø‡Æµ‡Æø‡Æ™‡Æø:‡Æé‡ÆÉ‡Æ™‡Øç‡Æé‡Æö‡Øç‡Æê(‡Æπ‡ØÜ‡Æ∞‡Øç‡Æü‡Øç‡Æ∏‡Øç)',
        'MDVP:Flo(Hz)': '‡Æé‡ÆÆ‡Øç‡Æü‡Æø‡Æµ‡Æø‡Æ™‡Æø:‡Æé‡ÆÉ‡Æ™‡Øç‡Æé‡Æ≤‡Øç‡Æí(‡Æπ‡ØÜ‡Æ∞‡Øç‡Æü‡Øç‡Æ∏‡Øç)',
        'MDVP:Jitter(%)': '‡Æé‡ÆÆ‡Øç‡Æü‡Æø‡Æµ‡Æø‡Æ™‡Æø:‡Æú‡Æø‡Æü‡Øç‡Æü‡Æ∞‡Øç(%)',
        'MDVP:Jitter(Abs)': '‡Æé‡ÆÆ‡Øç‡Æü‡Æø‡Æµ‡Æø‡Æ™‡Æø:‡Æú‡Æø‡Æü‡Øç‡Æü‡Æ∞‡Øç(‡ÆÆ‡ØÅ‡Æ¥‡ØÅ‡ÆÆ‡Øà‡ÆØ‡Ææ‡Æ©)',
        'MDVP:RAP': '‡Æé‡ÆÆ‡Øç‡Æü‡Æø‡Æµ‡Æø‡Æ™‡Æø:‡ÆÜ‡Æ∞‡Øç‡Æè‡Æ™‡Æø',
        'MDVP:PPQ': '‡Æé‡ÆÆ‡Øç‡Æü‡Æø‡Æµ‡Æø‡Æ™‡Æø:‡Æ™‡Æø‡Æ™‡Æø‡Æï‡Øç‡ÆØ‡ØÇ',
        'Jitter:DDP': '‡Æú‡Æø‡Æü‡Øç‡Æü‡Æ∞‡Øç:‡Æü‡Æø‡Æü‡Æø‡Æ™‡Æø',
        'MDVP:Shimmer': '‡Æé‡ÆÆ‡Øç‡Æü‡Æø‡Æµ‡Æø‡Æ™‡Æø:‡Æ∑‡Æø‡ÆÆ‡Øç‡ÆÆ‡Æ∞‡Øç',
        'MDVP:Shimmer(dB)': '‡Æé‡ÆÆ‡Øç‡Æü‡Æø‡Æµ‡Æø‡Æ™‡Æø:‡Æ∑‡Æø‡ÆÆ‡Øç‡ÆÆ‡Æ∞‡Øç(‡Æü‡Æø‡Æ™‡Æø)',
        'Shimmer:APQ3': '‡Æ∑‡Æø‡ÆÆ‡Øç‡ÆÆ‡Æ∞‡Øç:‡Æè‡Æ™‡Æø‡Æï‡Øç‡ÆØ‡ØÇ3',
        'Shimmer:APQ5': '‡Æ∑‡Æø‡ÆÆ‡Øç‡ÆÆ‡Æ∞‡Øç:‡Æè‡Æ™‡Æø‡Æï‡Øç‡ÆØ‡ØÇ5',
        'MDVP:APQ': '‡Æé‡ÆÆ‡Øç‡Æü‡Æø‡Æµ‡Æø‡Æ™‡Æø:‡Æè‡Æ™‡Æø‡Æï‡Øç‡ÆØ‡ØÇ',
        'Shimmer:DDA': '‡Æ∑‡Æø‡ÆÆ‡Øç‡ÆÆ‡Æ∞‡Øç:‡Æü‡Æø‡Æü‡Æø‡Æè',
        'NHR': '‡Æé‡Æ©‡Øç‡Æé‡Æö‡Øç‡ÆÜ‡Æ∞‡Øç',
        'HNR': '‡Æé‡Æö‡Øç‡Æé‡Æ©‡Øç‡ÆÜ‡Æ∞‡Øç',
        'RPDE': '‡ÆÜ‡Æ∞‡Øç‡Æ™‡Æø‡Æü‡Æø‡Æá',
        'DFA': '‡Æü‡Æø‡Æé‡ÆÉ‡Æ™‡Øç‡Æè',
        'spread1': '‡Æ∏‡Øç‡Æ™‡Øç‡Æ∞‡ØÜ‡Æü‡Øç1',
        'spread2': '‡Æ∏‡Øç‡Æ™‡Øç‡Æ∞‡ØÜ‡Æü‡Øç2',
        'D2': '‡Æü‡Æø2',
        'PPE': '‡Æ™‡Æø‡Æ™‡Æø‡Æá',
        'Height (cm):': '‡Æâ‡ÆØ‡Æ∞‡ÆÆ‡Øç (‡Æö‡ØÜ.‡ÆÆ‡ØÄ):',
        'Weight (kg):': '‡Æé‡Æü‡Øà (‡Æï‡Æø‡Æ≤‡Øã):',
        'Calculate BMI': '‡Æ™‡Æø‡Æé‡ÆÆ‡Øç‡Æê ‡Æï‡Æ£‡Æï‡Øç‡Æï‡Æø‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç',
        'Your BMI is:': '‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ™‡Æø‡Æé‡ÆÆ‡Øç‡Æê:',
        'You are underweight. Eat nutrient-rich foods üçûüçó': '‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æé‡Æü‡Øà ‡Æï‡ØÅ‡Æ±‡Øà‡Æµ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ. ‡Æä‡Æü‡Øç‡Æü‡Æö‡Øç‡Æö‡Æ§‡Øç‡Æ§‡ØÅ ‡Æ®‡Æø‡Æ±‡Øà‡Æ®‡Øç‡Æ§ ‡Æâ‡Æ£‡Æµ‡ØÅ‡Æï‡Æ≥‡Øà ‡Æâ‡Æ£‡Øç‡Æ£‡Æµ‡ØÅ‡ÆÆ‡Øç üçûüçó',
        'You are healthy! Keep maintaining a balanced diet ü•ó': '‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç! ‡Æö‡ÆÆ‡Æ®‡Æø‡Æ≤‡Øà‡ÆØ‡Ææ‡Æ© ‡Æâ‡Æ£‡Æµ‡Øà ‡Æ™‡Æ∞‡Ææ‡ÆÆ‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç ü•ó',
        'You are overweight. Exercise regularly üèÉ‚Äç‚ôÇÔ∏è': '‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æé‡Æü‡Øà ‡ÆÖ‡Æ§‡Æø‡Æï‡ÆÆ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ. ‡Æ§‡Æµ‡Æ±‡Ææ‡ÆÆ‡Æ≤‡Øç ‡Æâ‡Æü‡Æ±‡Øç‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡Æµ‡ØÅ‡ÆÆ‡Øç üèÉ‚Äç‚ôÇÔ∏è',
        'You are obese. Please consult a doctor and plan weight management ‚öïÔ∏è': '‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æâ‡Æü‡Æ≤‡Øç ‡Æ™‡Æ∞‡ØÅ‡ÆÆ‡Æ©‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç. ‡ÆÆ‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æµ‡Æ∞‡Øà ‡ÆÖ‡Æ£‡ØÅ‡Æï‡Æø ‡Æé‡Æü‡Øà ‡ÆÆ‡Øá‡Æ≤‡Ææ‡Æ£‡Øç‡ÆÆ‡Øà ‡Æ§‡Æø‡Æü‡Øç‡Æü‡ÆÆ‡Æø‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç ‚öïÔ∏è'
    }
}

insights_translations = {
    'English': {
        'high_glucose': "High Glucose Risk: Glucose levels above 140 mg/dL may indicate prediabetes or diabetes risk. Follow a low-carb diet, focusing on vegetables, whole grains, and lean proteins. Monitor glucose regularly and consult a doctor for screenings.",
        'obesity_risk': "Obesity Risk: BMI above 30 increases diabetes risk. Aim to lose 5-10% of body weight through 150 min/week of moderate exercise (e.g., brisk walking) and a balanced diet with controlled portions.",
        'age_diabetes_risk': "Age-Related Risk: Age above 45 is a risk factor for type 2 diabetes. Get annual screenings like fasting glucose or A1C tests and maintain a healthy lifestyle.",
        'pregnancy_risk': "Pregnancy History: Multiple pregnancies (>3) may increase diabetes risk. Ensure regular check-ups and manage weight post-pregnancy.",
        'diabetes_high_risk': "High Risk: You have a significant risk of diabetes. Prioritize 150 min/week of moderate exercise, reduce sugar intake, and consult a healthcare provider for a personalized plan.",
        'diabetes_low_risk': "Low Risk: Your risk is low. Maintain healthy habits: eat fiber-rich foods, exercise regularly, and monitor glucose periodically.",
        'diabetes_general_tip': "General Tip: Stay hydrated, manage stress with mindfulness or yoga, and get 7-9 hours of sleep to support insulin sensitivity.",
        'hypertension_risk': "Hypertension Risk: Resting BP above 140 mmHg indicates high blood pressure. Reduce salt intake (<1,500 mg/day), exercise 150 min/week, and check BP regularly.",
        'high_cholesterol': "High Cholesterol: Cholesterol above 240 mg/dL increases heart disease risk. Adopt a Mediterranean diet with olive oil, fish, and nuts, and avoid trans fats.",
        'angina_warning': "Angina Warning: Exercise-induced angina suggests heart strain. Avoid intense physical exertion and consult a cardiologist for evaluation.",
        'age_heart_risk': "Age-Related Risk: Age above 55 increases heart disease risk. Get regular cholesterol and BP screenings and maintain an active lifestyle.",
        'heart_high_risk': "High Risk: You have a significant risk of heart disease. Quit smoking, limit alcohol (1-2 drinks/day), and follow a heart-healthy diet. Consult a doctor for tests like ECG or stress testing.",
        'heart_low_risk': "Low Risk: Your risk is low. Continue heart-healthy habits: 150 min/week aerobic exercise, low-sodium diet, and stress management.",
        'heart_general_tip': "General Tip: Practice deep breathing or meditation to reduce stress and aim for 7-9 hours of sleep to support heart health.",
        'voice_changes': "Voice Changes: Low fundamental frequency (<100 Hz) may indicate vocal issues linked to Parkinson‚Äôs. Engage in speech therapy and practice vocal exercises daily.",
        'vocal_instability': "Vocal Instability: High jitter (>0.05%) suggests vocal tremors, a potential Parkinson‚Äôs symptom. Consult a neurologist and consider speech therapy.",
        'parkinsons_high_risk': "High Risk: You have a significant risk of Parkinson‚Äôs. Start physical therapy for mobility, engage in 150 min/week of exercise like tai chi, and seek a neurological evaluation.",
        'parkinsons_low_risk': "Low Risk: Your risk is low. Stay active with coordination-focused exercises (e.g., yoga) and monitor for symptoms like tremors.",
        'parkinsons_general_tip': "General Tip: Follow a Mediterranean diet, stay socially active, and adapt your home (e.g., remove rugs) to prevent falls."
    },
    'Hindi': {
        'high_glucose': "‡§â‡§ö‡•ç‡§ö ‡§ó‡•ç‡§≤‡•Ç‡§ï‡•ã‡§ú ‡§ú‡•ã‡§ñ‡§ø‡§Æ: 140 mg/dL ‡§∏‡•á ‡§ä‡§™‡§∞ ‡§ó‡•ç‡§≤‡•Ç‡§ï‡•ã‡§ú ‡§∏‡•ç‡§§‡§∞ ‡§™‡•ç‡§∞‡•Ä-‡§°‡§æ‡§Ø‡§¨‡§ø‡§ü‡•Ä‡§ú ‡§Ø‡§æ ‡§°‡§æ‡§Ø‡§¨‡§ø‡§ü‡•Ä‡§ú ‡§ï‡•á ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡•ã ‡§¶‡§∞‡•ç‡§∂‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§ï‡§Æ ‡§ï‡§æ‡§∞‡•ç‡§¨ ‡§Ü‡§π‡§æ‡§∞ ‡§ï‡§æ ‡§™‡§æ‡§≤‡§® ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§¨‡•ç‡§ú‡§ø‡§Ø‡•ã‡§Ç, ‡§∏‡§æ‡§¨‡•Å‡§§ ‡§Ö‡§®‡§æ‡§ú ‡§î‡§∞ ‡§≤‡•Ä‡§® ‡§™‡•ç‡§∞‡•ã‡§ü‡•Ä‡§® ‡§™‡§∞ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§¶‡•á‡§Ç‡•§ ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§ó‡•ç‡§≤‡•Ç‡§ï‡•ã‡§ú ‡§ï‡•Ä ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∏‡•ç‡§ï‡•ç‡§∞‡•Ä‡§®‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§∏‡•á ‡§™‡§∞‡§æ‡§Æ‡§∞‡•ç‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§",
        'obesity_risk': "‡§Æ‡•ã‡§ü‡§æ‡§™‡§æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ: 30 ‡§∏‡•á ‡§ä‡§™‡§∞ ‡§¨‡•Ä‡§è‡§Æ‡§Ü‡§à ‡§°‡§æ‡§Ø‡§¨‡§ø‡§ü‡•Ä‡§ú ‡§ï‡•á ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§™‡•ç‡§∞‡§§‡§ø ‡§∏‡§™‡•ç‡§§‡§æ‡§π 150 ‡§Æ‡§ø‡§®‡§ü ‡§Æ‡§ß‡•ç‡§Ø‡§Æ ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ (‡§ú‡•à‡§∏‡•á ‡§§‡•á‡§ú ‡§ö‡§≤‡§®‡§æ) ‡§î‡§∞ ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§Ü‡§π‡§æ‡§∞ ‡§ï‡•á ‡§∏‡§æ‡§• 5-10% ‡§µ‡§ú‡§® ‡§ï‡§Æ ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø ‡§∞‡§ñ‡•á‡§Ç‡•§",
        'age_diabetes_risk': "‡§Ü‡§Ø‡•Å-‡§∏‡§Ç‡§¨‡§Ç‡§ß‡•Ä ‡§ú‡•ã‡§ñ‡§ø‡§Æ: 45 ‡§µ‡§∞‡•ç‡§∑ ‡§∏‡•á ‡§Ö‡§ß‡§ø‡§ï ‡§Ü‡§Ø‡•Å ‡§ü‡§æ‡§á‡§™ 2 ‡§°‡§æ‡§Ø‡§¨‡§ø‡§ü‡•Ä‡§ú ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡§æ‡§∞‡§ï ‡§π‡•à‡•§ ‡§â‡§™‡§µ‡§æ‡§∏ ‡§ó‡•ç‡§≤‡•Ç‡§ï‡•ã‡§ú ‡§Ø‡§æ A1C ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§£ ‡§ú‡•à‡§∏‡•á ‡§µ‡§æ‡§∞‡•ç‡§∑‡§ø‡§ï ‡§∏‡•ç‡§ï‡•ç‡§∞‡•Ä‡§®‡§ø‡§Ç‡§ó ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§ú‡•Ä‡§µ‡§®‡§∂‡•à‡§≤‡•Ä ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç‡•§",
        'pregnancy_risk': "‡§ó‡§∞‡•ç‡§≠‡§æ‡§µ‡§∏‡•ç‡§•‡§æ ‡§á‡§§‡§ø‡§π‡§æ‡§∏: ‡§è‡§ï ‡§∏‡•á ‡§Ö‡§ß‡§ø‡§ï ‡§ó‡§∞‡•ç‡§≠‡§æ‡§µ‡§∏‡•ç‡§•‡§æ‡§è‡§Ç (>3) ‡§°‡§æ‡§Ø‡§¨‡§ø‡§ü‡•Ä‡§ú ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ ‡§∏‡§ï‡§§‡•Ä ‡§π‡•à‡§Ç‡•§ ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§ú‡§æ‡§Ç‡§ö ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§ó‡§∞‡•ç‡§≠‡§æ‡§µ‡§∏‡•ç‡§•‡§æ ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§µ‡§ú‡§® ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§ï‡§∞‡•á‡§Ç‡•§",
        'diabetes_high_risk': "‡§â‡§ö‡•ç‡§ö ‡§ú‡•ã‡§ñ‡§ø‡§Æ: ‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ ‡§°‡§æ‡§Ø‡§¨‡§ø‡§ü‡•Ä‡§ú ‡§ï‡§æ ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§π‡•à‡•§ ‡§™‡•ç‡§∞‡§§‡§ø ‡§∏‡§™‡•ç‡§§‡§æ‡§π 150 ‡§Æ‡§ø‡§®‡§ü ‡§Æ‡§ß‡•ç‡§Ø‡§Æ ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ ‡§ï‡•ã ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï‡§§‡§æ ‡§¶‡•á‡§Ç, ‡§ö‡•Ä‡§®‡•Ä ‡§ï‡§æ ‡§∏‡•á‡§µ‡§® ‡§ï‡§Æ ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ ‡§™‡•ç‡§∞‡§¶‡§æ‡§§‡§æ ‡§∏‡•á ‡§™‡§∞‡§æ‡§Æ‡§∞‡•ç‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§",
        'diabetes_low_risk': "‡§ï‡§Æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ: ‡§Ü‡§™‡§ï‡§æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡§Æ ‡§π‡•à‡•§ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§Ü‡§¶‡§§‡•á‡§Ç ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç: ‡§´‡§æ‡§á‡§¨‡§∞ ‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§≠‡•ã‡§ú‡§® ‡§ï‡§∞‡•á‡§Ç, ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§∏‡§Æ‡§Ø-‡§∏‡§Æ‡§Ø ‡§™‡§∞ ‡§ó‡•ç‡§≤‡•Ç‡§ï‡•ã‡§ú ‡§ï‡•Ä ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä ‡§ï‡§∞‡•á‡§Ç‡•§",
        'diabetes_general_tip': "‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§∏‡•Å‡§ù‡§æ‡§µ: ‡§π‡§æ‡§á‡§°‡•ç‡§∞‡•á‡§ü‡•á‡§° ‡§∞‡§π‡•á‡§Ç, ‡§Æ‡§æ‡§á‡§Ç‡§°‡§´‡•Å‡§≤‡§®‡•á‡§∏ ‡§Ø‡§æ ‡§Ø‡•ã‡§ó ‡§ï‡•á ‡§∏‡§æ‡§• ‡§§‡§®‡§æ‡§µ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§á‡§Ç‡§∏‡•Å‡§≤‡§ø‡§® ‡§∏‡§Ç‡§µ‡•á‡§¶‡§®‡§∂‡•Ä‡§≤‡§§‡§æ ‡§ï‡§æ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§® ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è 7-9 ‡§ò‡§Ç‡§ü‡•á ‡§ï‡•Ä ‡§®‡•Ä‡§Ç‡§¶ ‡§≤‡•á‡§Ç‡•§",
        'hypertension_risk': "‡§â‡§ö‡•ç‡§ö ‡§∞‡§ï‡•ç‡§§‡§ö‡§æ‡§™ ‡§ú‡•ã‡§ñ‡§ø‡§Æ: 140 mmHg ‡§∏‡•á ‡§ä‡§™‡§∞ ‡§µ‡§ø‡§∂‡•ç‡§∞‡§æ‡§Æ ‡§¨‡•Ä‡§™‡•Ä ‡§â‡§ö‡•ç‡§ö ‡§∞‡§ï‡•ç‡§§‡§ö‡§æ‡§™ ‡§ï‡•ã ‡§¶‡§∞‡•ç‡§∂‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§®‡§Æ‡§ï ‡§ï‡§æ ‡§∏‡•á‡§µ‡§® ‡§ï‡§Æ ‡§ï‡§∞‡•á‡§Ç (<1,500 mg/‡§¶‡§ø‡§®), ‡§™‡•ç‡§∞‡§§‡§ø ‡§∏‡§™‡•ç‡§§‡§æ‡§π 150 ‡§Æ‡§ø‡§®‡§ü ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§¨‡•Ä‡§™‡•Ä ‡§ï‡•Ä ‡§ú‡§æ‡§Ç‡§ö ‡§ï‡§∞‡•á‡§Ç‡•§",
        'high_cholesterol': "‡§â‡§ö‡•ç‡§ö ‡§ï‡•ã‡§≤‡•á‡§∏‡•ç‡§ü‡•ç‡§∞‡•â‡§≤: 240 mg/dL ‡§∏‡•á ‡§ä‡§™‡§∞ ‡§ï‡•ã‡§≤‡•á‡§∏‡•ç‡§ü‡•ç‡§∞‡•â‡§≤ ‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§ú‡•à‡§§‡•Ç‡§® ‡§ï‡§æ ‡§§‡•á‡§≤, ‡§Æ‡§õ‡§≤‡•Ä ‡§î‡§∞ ‡§®‡§ü‡•ç‡§∏ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§≠‡•Ç‡§Æ‡§ß‡•ç‡§Ø‡§∏‡§æ‡§ó‡§∞‡•Ä‡§Ø ‡§Ü‡§π‡§æ‡§∞ ‡§Ö‡§™‡§®‡§æ‡§è‡§Ç, ‡§î‡§∞ ‡§ü‡•ç‡§∞‡§æ‡§Ç‡§∏ ‡§µ‡§∏‡§æ ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç‡•§",
        'angina_warning': "‡§è‡§®‡§ú‡§æ‡§á‡§®‡§æ ‡§ö‡•á‡§§‡§æ‡§µ‡§®‡•Ä: ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ-‡§™‡•ç‡§∞‡•á‡§∞‡§ø‡§§ ‡§è‡§®‡§ú‡§æ‡§á‡§®‡§æ ‡§π‡•É‡§¶‡§Ø ‡§§‡§®‡§æ‡§µ ‡§ï‡§æ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§ ‡§§‡•Ä‡§µ‡•ç‡§∞ ‡§∂‡§æ‡§∞‡•Ä‡§∞‡§ø‡§ï ‡§™‡§∞‡§ø‡§∂‡•ç‡§∞‡§Æ ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç ‡§î‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡§æ‡§Ç‡§ï‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û ‡§∏‡•á ‡§™‡§∞‡§æ‡§Æ‡§∞‡•ç‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§",
        'age_heart_risk': "‡§Ü‡§Ø‡•Å-‡§∏‡§Ç‡§¨‡§Ç‡§ß‡•Ä ‡§ú‡•ã‡§ñ‡§ø‡§Æ: 55 ‡§µ‡§∞‡•ç‡§∑ ‡§∏‡•á ‡§Ö‡§ß‡§ø‡§ï ‡§Ü‡§Ø‡•Å ‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§§‡•Ä ‡§π‡•à‡•§ ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§ï‡•ã‡§≤‡•á‡§∏‡•ç‡§ü‡•ç‡§∞‡•â‡§≤ ‡§î‡§∞ ‡§¨‡•Ä‡§™‡•Ä ‡§∏‡•ç‡§ï‡•ç‡§∞‡•Ä‡§®‡§ø‡§Ç‡§ó ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§ú‡•Ä‡§µ‡§®‡§∂‡•à‡§≤‡•Ä ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç‡•§",
        'heart_high_risk': "‡§â‡§ö‡•ç‡§ö ‡§ú‡•ã‡§ñ‡§ø‡§Æ: ‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ ‡§π‡•É‡§¶‡§Ø ‡§∞‡•ã‡§ó ‡§ï‡§æ ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§π‡•à‡•§ ‡§ß‡•Ç‡§Æ‡•ç‡§∞‡§™‡§æ‡§® ‡§õ‡•ã‡§°‡§º‡•á‡§Ç, ‡§∂‡§∞‡§æ‡§¨ ‡§∏‡•Ä‡§Æ‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç (1-2 ‡§°‡•ç‡§∞‡§ø‡§Ç‡§ï/‡§¶‡§ø‡§®), ‡§î‡§∞ ‡§π‡•É‡§¶‡§Ø-‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§Ü‡§π‡§æ‡§∞ ‡§ï‡§æ ‡§™‡§æ‡§≤‡§® ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§à‡§∏‡•Ä‡§ú‡•Ä ‡§Ø‡§æ ‡§∏‡•ç‡§ü‡•ç‡§∞‡•á‡§∏ ‡§ü‡•á‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó ‡§ú‡•à‡§∏‡•á ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§∏‡•á ‡§™‡§∞‡§æ‡§Æ‡§∞‡•ç‡§∂ ‡§ï‡§∞‡•á‡§Ç‡•§",
        'heart_low_risk': "‡§ï‡§Æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ: ‡§Ü‡§™‡§ï‡§æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡§Æ ‡§π‡•à‡•§ ‡§π‡•É‡§¶‡§Ø-‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§Ü‡§¶‡§§‡•á‡§Ç ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç: ‡§™‡•ç‡§∞‡§§‡§ø ‡§∏‡§™‡•ç‡§§‡§æ‡§π 150 ‡§Æ‡§ø‡§®‡§ü ‡§è‡§∞‡•ã‡§¨‡§ø‡§ï ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ, ‡§ï‡§Æ ‡§∏‡•ã‡§°‡§ø‡§Ø‡§Æ ‡§Ü‡§π‡§æ‡§∞, ‡§î‡§∞ ‡§§‡§®‡§æ‡§µ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®‡•§",
        'heart_general_tip': "‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§∏‡•Å‡§ù‡§æ‡§µ: ‡§§‡§®‡§æ‡§µ ‡§ï‡§Æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ó‡§π‡§∞‡•Ä ‡§∏‡§æ‡§Ç‡§∏ ‡§Ø‡§æ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§ï‡§æ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§π‡•É‡§¶‡§Ø ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡•á ‡§≤‡§ø‡§è 7-9 ‡§ò‡§Ç‡§ü‡•á ‡§ï‡•Ä ‡§®‡•Ä‡§Ç‡§¶ ‡§≤‡•á‡§Ç‡•§",
        'voice_changes': "‡§Ü‡§µ‡§æ‡§ú ‡§™‡§∞‡§ø‡§µ‡§∞‡•ç‡§§‡§®: ‡§ï‡§Æ ‡§Æ‡•Ç‡§≤ ‡§Ü‡§µ‡•É‡§§‡•ç‡§§‡§ø (<100 Hz) ‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§∏‡•á ‡§∏‡§Ç‡§¨‡§Ç‡§ß‡§ø‡§§ ‡§µ‡•ã‡§ï‡§≤ ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§¶‡§∞‡•ç‡§∂‡§æ ‡§∏‡§ï‡§§‡•Ä ‡§π‡•à‡•§ ‡§µ‡§æ‡§£‡•Ä ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•ã‡§Ç ‡§î‡§∞ ‡§¶‡•à‡§®‡§ø‡§ï ‡§µ‡•ã‡§ï‡§≤ ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ ‡§ï‡§∞‡•á‡§Ç‡•§",
        'vocal_instability': "‡§µ‡•ã‡§ï‡§≤ ‡§Ö‡§∏‡•ç‡§•‡§ø‡§∞‡§§‡§æ: ‡§â‡§ö‡•ç‡§ö ‡§ú‡§ø‡§ü‡§∞ (>0.05%) ‡§µ‡•ã‡§ï‡§≤ ‡§ï‡§Ç‡§™‡§® ‡§ï‡§æ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§¶‡•á‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§ï‡§æ ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§ø‡§§ ‡§≤‡§ï‡•ç‡§∑‡§£ ‡§π‡•à‡•§ ‡§®‡•ç‡§Ø‡•Ç‡§∞‡•ã‡§≤‡•â‡§ú‡§ø‡§∏‡•ç‡§ü ‡§∏‡•á ‡§™‡§∞‡§æ‡§Æ‡§∞‡•ç‡§∂ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§µ‡§æ‡§£‡•Ä ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§™‡§∞ ‡§µ‡§ø‡§ö‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç‡•§",
        'parkinsons_high_risk': "‡§â‡§ö‡•ç‡§ö ‡§ú‡•ã‡§ñ‡§ø‡§Æ: ‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ ‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏ ‡§ï‡§æ ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§π‡•à‡•§ ‡§ó‡§§‡§ø‡§∂‡•Ä‡§≤‡§§‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≠‡•å‡§§‡§ø‡§ï ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç, ‡§™‡•ç‡§∞‡§§‡§ø ‡§∏‡§™‡•ç‡§§‡§æ‡§π 150 ‡§Æ‡§ø‡§®‡§ü ‡§§‡§æ‡§á ‡§ö‡•Ä ‡§ú‡•à‡§∏‡•á ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§®‡•ç‡§Ø‡•Ç‡§∞‡•ã‡§≤‡•â‡§ú‡§ø‡§ï‡§≤ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡§æ‡§Ç‡§ï‡§® ‡§≤‡•á‡§Ç‡•§",
        'parkinsons_low_risk': "‡§ï‡§Æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ: ‡§Ü‡§™‡§ï‡§æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡§Æ ‡§π‡•à‡•§ ‡§∏‡§Æ‡§®‡•ç‡§µ‡§Ø-‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞‡§ø‡§§ ‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ (‡§ú‡•à‡§∏‡•á ‡§Ø‡•ã‡§ó) ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§∞‡§π‡•á‡§Ç ‡§î‡§∞ ‡§ï‡§Ç‡§™‡§® ‡§ú‡•à‡§∏‡•á ‡§≤‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§ï‡•Ä ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä ‡§ï‡§∞‡•á‡§Ç‡•§",
        'parkinsons_general_tip': "‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§∏‡•Å‡§ù‡§æ‡§µ: ‡§≠‡•Ç‡§Æ‡§ß‡•ç‡§Ø‡§∏‡§æ‡§ó‡§∞‡•Ä‡§Ø ‡§Ü‡§π‡§æ‡§∞ ‡§ï‡§æ ‡§™‡§æ‡§≤‡§® ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§æ‡§Æ‡§æ‡§ú‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§∞‡§π‡•á‡§Ç, ‡§î‡§∞ ‡§ó‡§ø‡§∞‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§™‡§®‡•á ‡§ò‡§∞ ‡§ï‡•ã ‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç (‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ó‡§≤‡•Ä‡§ö‡•á ‡§π‡§ü‡§æ‡§è‡§Ç)‡•§"
    },
    'Tamil': {
        'high_glucose': "‡Æâ‡ÆØ‡Æ∞‡Øç ‡Æï‡ØÅ‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡Øã‡Æ∏‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç: 140 mg/dL-‡Æê ‡Æ§‡Ææ‡Æ£‡Øç‡Æü‡Æø‡ÆØ ‡Æï‡ØÅ‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡Øã‡Æ∏‡Øç ‡ÆÖ‡Æ≥‡Æµ‡ØÅ‡Æï‡Æ≥‡Øç ‡ÆÆ‡ØÅ‡Æ©‡Øç-‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ ‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡Æ§‡Øç‡Æ§‡Øà‡Æï‡Øç ‡Æï‡ØÅ‡Æ±‡Æø‡Æï‡Øç‡Æï‡Æ≤‡Ææ‡ÆÆ‡Øç. ‡Æï‡ØÅ‡Æ±‡Øà‡Æ®‡Øç‡Æ§ ‡Æï‡Ææ‡Æ∞‡Øç‡Æ™‡Øã‡Æπ‡Øà‡Æü‡Øç‡Æ∞‡Øá‡Æü‡Øç ‡Æâ‡Æ£‡Æµ‡Øà‡Æ™‡Øç ‡Æ™‡Æø‡Æ©‡Øç‡Æ™‡Æ±‡Øç‡Æ±‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡Æï‡Ææ‡ÆØ‡Øç‡Æï‡Æ±‡Æø‡Æï‡Æ≥‡Øç, ‡ÆÆ‡ØÅ‡Æ¥‡ØÅ ‡Æ§‡Ææ‡Æ©‡Æø‡ÆØ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡ØÜ‡Æ≤‡Æø‡Æ®‡Øç‡Æ§ ‡Æ™‡ØÅ‡Æ∞‡Æ§‡Æô‡Øç‡Æï‡Æ≥‡Øà ‡ÆÆ‡Øà‡ÆØ‡ÆÆ‡Ææ‡Æï‡Æï‡Øç ‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡Æµ‡ØÅ‡ÆÆ‡Øç. ‡Æ§‡Æµ‡Æ±‡Ææ‡ÆÆ‡Æ≤‡Øç ‡Æï‡ØÅ‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡Øã‡Æ∏‡Øà ‡Æï‡Æ£‡Øç‡Æï‡Ææ‡Æ£‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æ™‡Æ∞‡Æø‡Æö‡Øã‡Æ§‡Æ©‡Øà‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡ÆÆ‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æµ‡Æ∞‡Øà ‡ÆÖ‡Æ£‡ØÅ‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'obesity_risk': "‡Æâ‡Æü‡Æ≤‡Øç ‡Æ™‡Æ∞‡ØÅ‡ÆÆ‡Æ©‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç: 30-‡Æê ‡Æ§‡Ææ‡Æ£‡Øç‡Æü‡Æø‡ÆØ ‡Æ™‡Æø‡Æé‡ÆÆ‡Øç‡Æê ‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡Æ§‡Øç‡Æ§‡Øà ‡ÆÖ‡Æ§‡Æø‡Æï‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Æø‡Æ±‡Æ§‡ØÅ. ‡Æµ‡Ææ‡Æ∞‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ 150 ‡Æ®‡Æø‡ÆÆ‡Æø‡Æü ‡ÆÆ‡Æø‡Æ§‡ÆÆ‡Ææ‡Æ© ‡Æâ‡Æü‡Æ±‡Øç‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø (‡Æé.‡Æï‡Ææ., ‡Æµ‡Øá‡Æï‡ÆÆ‡Ææ‡Æï ‡Æ®‡Æü‡Æ™‡Øç‡Æ™‡Æ§‡ØÅ) ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø ‡Æï‡Æü‡Øç‡Æü‡ØÅ‡Æ™‡Øç‡Æ™‡Ææ‡Æü‡Øç‡Æü‡ØÅ‡Æü‡Æ©‡Øç ‡Æï‡ØÇ‡Æü‡Æø‡ÆØ ‡Æö‡ÆÆ‡Æ®‡Æø‡Æ≤‡Øà‡ÆØ‡Ææ‡Æ© ‡Æâ‡Æ£‡Æµ‡ØÅ ‡ÆÆ‡ØÇ‡Æ≤‡ÆÆ‡Øç 5-10% ‡Æâ‡Æü‡Æ≤‡Øç ‡Æé‡Æü‡Øà‡ÆØ‡Øà ‡Æï‡ØÅ‡Æ±‡Øà‡Æï‡Øç‡Æï ‡Æá‡Æ≤‡Æï‡Øç‡Æï‡ØÅ ‡Æµ‡Øà‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'age_diabetes_risk': "‡Æµ‡ÆØ‡Æ§‡ØÅ ‡Æ§‡Øä‡Æü‡Æ∞‡Øç‡Æ™‡Ææ‡Æ© ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç: 45 ‡Æµ‡ÆØ‡Æ§‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡ÆÆ‡Øá‡Æ≤‡Øç ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æµ‡Æ∞‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æü‡Øà‡Æ™‡Øç 2 ‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡ÆÖ‡Æ™‡Ææ‡ÆØ ‡Æï‡Ææ‡Æ∞‡Æ£‡Æø‡ÆØ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ. ‡Æ®‡Øã‡Æ©‡Øç‡Æ™‡ØÅ ‡Æï‡ØÅ‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡Øã‡Æ∏‡Øç ‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ A1C ‡Æ™‡Æ∞‡Æø‡Æö‡Øã‡Æ§‡Æ©‡Øà‡Æï‡Æ≥‡Øç ‡Æ™‡Øã‡Æ©‡Øç‡Æ± ‡ÆÜ‡Æ£‡Øç‡Æü‡ØÅ ‡Æ™‡Æ∞‡Æø‡Æö‡Øã‡Æ§‡Æ©‡Øà‡Æï‡Æ≥‡Øà ‡ÆÆ‡Øá‡Æ±‡Øç‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æ© ‡Æµ‡Ææ‡Æ¥‡Øç‡Æï‡Øç‡Æï‡Øà ‡ÆÆ‡ØÅ‡Æ±‡Øà‡ÆØ‡Øà ‡Æ™‡Æ∞‡Ææ‡ÆÆ‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'pregnancy_risk': "‡Æï‡Æ∞‡Øç‡Æ™‡Øç‡Æ™ ‡Æµ‡Æ∞‡Æ≤‡Ææ‡Æ±‡ØÅ: ‡Æ™‡Æ≤ ‡Æï‡Æ∞‡Øç‡Æ™‡Øç‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Øç (>3) ‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡Æ§‡Øç‡Æ§‡Øà ‡ÆÖ‡Æ§‡Æø‡Æï‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Æ≤‡Ææ‡ÆÆ‡Øç. ‡Æ§‡Æµ‡Æ±‡Ææ‡ÆÆ‡Æ≤‡Øç ‡Æ™‡Æ∞‡Æø‡Æö‡Øã‡Æ§‡Æ©‡Øà‡Æï‡Æ≥‡Øç ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æï‡Æ∞‡Øç‡Æ™‡Øç‡Æ™‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ‡Æ™‡Øç ‡Æ™‡Æø‡Æ©‡Øç ‡Æé‡Æü‡Øà ‡ÆÆ‡Øá‡Æ≤‡Ææ‡Æ£‡Øç‡ÆÆ‡Øà ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'diabetes_high_risk': "‡Æâ‡ÆØ‡Æ∞‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç: ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æ®‡ØÄ‡Æ∞‡Æø‡Æ¥‡Æø‡Æµ‡ØÅ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡Æ£‡Æø‡Æö‡ÆÆ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ. ‡Æµ‡Ææ‡Æ∞‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ 150 ‡Æ®‡Æø‡ÆÆ‡Æø‡Æü ‡ÆÆ‡Æø‡Æ§‡ÆÆ‡Ææ‡Æ© ‡Æâ‡Æü‡Æ±‡Øç‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø‡Æï‡Øç‡Æï‡ØÅ ‡ÆÆ‡ØÅ‡Æ©‡Øç‡Æ©‡ØÅ‡Æ∞‡Æø‡ÆÆ‡Øà ‡Æï‡Øä‡Æü‡ØÅ‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡Æö‡Æ∞‡Øç‡Æï‡Øç‡Æï‡Æ∞‡Øà ‡Æâ‡Æü‡Øç‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡Æ≤‡Øà ‡Æï‡ØÅ‡Æ±‡Øà‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æ§‡Æ©‡Æø‡Æ™‡Øç‡Æ™‡ÆØ‡Æ©‡Ææ‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æ§‡Æø‡Æü‡Øç‡Æü‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ ‡ÆÆ‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æµ‡Æ∞‡Øà ‡ÆÖ‡Æ£‡ØÅ‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'diabetes_low_risk': "‡Æï‡ØÅ‡Æ±‡Øà‡Æ®‡Øç‡Æ§ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç: ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡ØÅ‡Æ±‡Øà‡Æµ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ. ‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æ© ‡Æ™‡Æ¥‡Æï‡Øç‡Æï‡Æô‡Øç‡Æï‡Æ≥‡Øà ‡Æ™‡Æ∞‡Ææ‡ÆÆ‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç: ‡Æ®‡Ææ‡Æ∞‡Øç‡Æö‡Øç‡Æö‡Æ§‡Øç‡Æ§‡ØÅ ‡Æ®‡Æø‡Æ±‡Øà‡Æ®‡Øç‡Æ§ ‡Æâ‡Æ£‡Æµ‡ØÅ‡Æï‡Æ≥‡Øà ‡Æâ‡Æ£‡Øç‡Æ£‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡Æ§‡Æµ‡Æ±‡Ææ‡ÆÆ‡Æ≤‡Øç ‡Æâ‡Æü‡Æ±‡Øç‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡ÆÖ‡Æµ‡Øç‡Æµ‡Æ™‡Øç‡Æ™‡Øã‡Æ§‡ØÅ ‡Æï‡ØÅ‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡Øã‡Æ∏‡Øà ‡Æï‡Æ£‡Øç‡Æï‡Ææ‡Æ£‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'diabetes_general_tip': "‡Æ™‡Øä‡Æ§‡ØÅ‡Æµ‡Ææ‡Æ© ‡Æï‡ØÅ‡Æ±‡Æø‡Æ™‡Øç‡Æ™‡ØÅ: ‡Æ®‡ØÄ‡Æ∞‡Øá‡Æ±‡Øç‡Æ±‡ÆÆ‡Ææ‡Æï ‡Æá‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡ÆÆ‡Æ©‡Æ®‡Æø‡Æ±‡Øà‡Æµ‡ØÅ ‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ ‡ÆØ‡Øã‡Æï‡Ææ‡Æµ‡ØÅ‡Æü‡Æ©‡Øç ‡ÆÆ‡Æ© ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§‡Æ§‡Øç‡Æ§‡Øà ‡ÆÆ‡Øá‡Æ≤‡Ææ‡Æ£‡Øç‡ÆÆ‡Øà ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æá‡Æ©‡Øç‡Æö‡ØÅ‡Æ≤‡Æø‡Æ©‡Øç ‡Æâ‡Æ£‡Æ∞‡Øç‡Æ§‡Æø‡Æ±‡Æ©‡Øà ‡ÆÜ‡Æ§‡Æ∞‡Æø‡Æï‡Øç‡Æï 7-9 ‡ÆÆ‡Æ£‡Æø‡Æ®‡Øá‡Æ∞ ‡Æ§‡ØÇ‡Æï‡Øç‡Æï‡ÆÆ‡Øç ‡Æ™‡ØÜ‡Æ±‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'hypertension_risk': "‡Æâ‡ÆØ‡Æ∞‡Øç ‡Æá‡Æ∞‡Æ§‡Øç‡Æ§ ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç: 140 mmHg-‡Æê ‡Æ§‡Ææ‡Æ£‡Øç‡Æü‡Æø‡ÆØ ‡Æì‡ÆØ‡Øç‡Æµ‡ØÅ ‡Æá‡Æ∞‡Æ§‡Øç‡Æ§ ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§‡ÆÆ‡Øç ‡Æâ‡ÆØ‡Æ∞‡Øç ‡Æá‡Æ∞‡Æ§‡Øç‡Æ§ ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§‡Æ§‡Øç‡Æ§‡Øà‡Æï‡Øç ‡Æï‡ØÅ‡Æ±‡Æø‡Æï‡Øç‡Æï‡Æø‡Æ±‡Æ§‡ØÅ. ‡Æâ‡Æ™‡Øç‡Æ™‡ØÅ ‡Æâ‡Æü‡Øç‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡Æ≤‡Øà ‡Æï‡ØÅ‡Æ±‡Øà‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç (<1,500 mg/‡Æ®‡Ææ‡Æ≥‡Øç), ‡Æµ‡Ææ‡Æ∞‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ 150 ‡Æ®‡Æø‡ÆÆ‡Æø‡Æü ‡Æâ‡Æü‡Æ±‡Øç‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æ§‡Æµ‡Æ±‡Ææ‡ÆÆ‡Æ≤‡Øç ‡Æá‡Æ∞‡Æ§‡Øç‡Æ§ ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§‡Æ§‡Øç‡Æ§‡Øà ‡Æö‡Æ∞‡Æø‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'high_cholesterol': "‡Æâ‡ÆØ‡Æ∞‡Øç ‡Æï‡Øä‡Æ≤‡Æ∏‡Øç‡Æü‡Øç‡Æ∞‡Ææ‡Æ≤‡Øç: 240 mg/dL-‡Æê ‡Æ§‡Ææ‡Æ£‡Øç‡Æü‡Æø‡ÆØ ‡Æï‡Øä‡Æ≤‡Æ∏‡Øç‡Æü‡Øç‡Æ∞‡Ææ‡Æ≤‡Øç ‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡Æ§‡Øç‡Æ§‡Øà ‡ÆÖ‡Æ§‡Æø‡Æï‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Æø‡Æ±‡Æ§‡ØÅ. ‡ÆÜ‡Æ≤‡Æø‡Æµ‡Øç ‡Æé‡Æ£‡Øç‡Æ£‡ØÜ‡ÆØ‡Øç, ‡ÆÆ‡ØÄ‡Æ©‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æï‡Øä‡Æü‡Øç‡Æü‡Øà‡Æï‡Æ≥‡Øç ‡Æï‡Øä‡Æ£‡Øç‡Æü ‡ÆÆ‡Æ§‡Øç‡Æ§‡Æø‡ÆØ‡Æ§‡Æ∞‡Øà‡Æï‡Øç ‡Æï‡Æü‡Æ≤‡Øç ‡Æâ‡Æ£‡Æµ‡ØÅ ‡ÆÆ‡ØÅ‡Æ±‡Øà‡ÆØ‡Øà ‡Æ™‡Æø‡Æ©‡Øç‡Æ™‡Æ±‡Øç‡Æ±‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æü‡Æø‡Æ∞‡Ææ‡Æ©‡Øç‡Æ∏‡Øç ‡Æï‡Øä‡Æ¥‡ØÅ‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Æ≥‡Øà ‡Æ§‡Æµ‡Æø‡Æ∞‡Øç‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'angina_warning': "‡ÆÜ‡Æû‡Øç‡Æö‡Æø‡Æ©‡Ææ ‡Æé‡Æö‡Øç‡Æö‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Øà: ‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø‡ÆØ‡Ææ‡Æ≤‡Øç ‡Æ§‡ØÇ‡Æ£‡Øç‡Æü‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡ÆÜ‡Æû‡Øç‡Æö‡Æø‡Æ©‡Ææ ‡Æá‡Æ§‡ÆØ ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§‡Æ§‡Øç‡Æ§‡Øà‡Æï‡Øç ‡Æï‡ØÅ‡Æ±‡Æø‡Æï‡Øç‡Æï‡Æø‡Æ±‡Æ§‡ØÅ. ‡Æ§‡ØÄ‡Æµ‡Æø‡Æ∞ ‡Æâ‡Æü‡Æ≤‡Øç ‡Æâ‡Æ¥‡Øà‡Æ™‡Øç‡Æ™‡Øà ‡Æ§‡Æµ‡Æø‡Æ∞‡Øç‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ§‡Æø‡Æ™‡Øç‡Æ™‡ØÄ‡Æü‡Øç‡Æü‡Æø‡Æ±‡Øç‡Æï‡ØÅ ‡Æá‡Æ§‡ÆØ‡Æ®‡Øã‡ÆØ‡Øç ‡Æ®‡Æø‡Æ™‡ØÅ‡Æ£‡Æ∞‡Øà ‡ÆÖ‡Æ£‡ØÅ‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'age_heart_risk': "‡Æµ‡ÆØ‡Æ§‡ØÅ ‡Æ§‡Øä‡Æü‡Æ∞‡Øç‡Æ™‡Ææ‡Æ© ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç: 55 ‡Æµ‡ÆØ‡Æ§‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡ÆÆ‡Øá‡Æ≤‡Øç ‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡Æ§‡Øç‡Æ§‡Øà ‡ÆÖ‡Æ§‡Æø‡Æï‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Æø‡Æ±‡Æ§‡ØÅ. ‡Æ§‡Æµ‡Æ±‡Ææ‡ÆÆ‡Æ≤‡Øç ‡Æï‡Øä‡Æ≤‡Æ∏‡Øç‡Æü‡Øç‡Æ∞‡Ææ‡Æ≤‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æá‡Æ∞‡Æ§‡Øç‡Æ§ ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§ ‡Æ™‡Æ∞‡Æø‡Æö‡Øã‡Æ§‡Æ©‡Øà‡Æï‡Æ≥‡Øà ‡ÆÆ‡Øá‡Æ±‡Øç‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æö‡ØÜ‡ÆØ‡Æ≤‡Æø‡Æ≤‡Øç ‡Æâ‡Æ≥‡Øç‡Æ≥ ‡Æµ‡Ææ‡Æ¥‡Øç‡Æï‡Øç‡Æï‡Øà ‡ÆÆ‡ØÅ‡Æ±‡Øà‡ÆØ‡Øà ‡Æ™‡Æ∞‡Ææ‡ÆÆ‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'heart_high_risk': "‡Æâ‡ÆØ‡Æ∞‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç: ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æá‡Æ§‡ÆØ ‡Æ®‡Øã‡ÆØ‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡Æ£‡Æø‡Æö‡ÆÆ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ. ‡Æ™‡ØÅ‡Æï‡Øà‡Æ™‡Æø‡Æü‡Æø‡Æ™‡Øç‡Æ™‡Æ§‡Øà ‡Æ®‡Æø‡Æ±‡ØÅ‡Æ§‡Øç‡Æ§‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡ÆÆ‡Æ§‡ØÅ ‡ÆÖ‡Æ∞‡ØÅ‡Æ®‡Øç‡Æ§‡ØÅ‡Æ§‡Æ≤‡Øà ‡Æï‡Æü‡Øç‡Æü‡ØÅ‡Æ™‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡Æµ‡ØÅ‡ÆÆ‡Øç (1-2 ‡Æ™‡Ææ‡Æ©‡Æô‡Øç‡Æï‡Æ≥‡Øç/‡Æ®‡Ææ‡Æ≥‡Øç), ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æá‡Æ§‡ÆØ-‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æ© ‡Æâ‡Æ£‡Æµ‡Øà ‡Æ™‡Æø‡Æ©‡Øç‡Æ™‡Æ±‡Øç‡Æ±‡Æµ‡ØÅ‡ÆÆ‡Øç. ‡Æá‡Æö‡Æø‡Æú‡Æø ‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ ‡ÆÆ‡Æ© ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§ ‡Æ™‡Æ∞‡Æø‡Æö‡Øã‡Æ§‡Æ©‡Øà ‡Æ™‡Øã‡Æ©‡Øç‡Æ± ‡Æ™‡Æ∞‡Æø‡Æö‡Øã‡Æ§‡Æ©‡Øà‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡ÆÆ‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æµ‡Æ∞‡Øà ‡ÆÖ‡Æ£‡ØÅ‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'heart_low_risk': "‡Æï‡ØÅ‡Æ±‡Øà‡Æ®‡Øç‡Æ§ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç: ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡ØÅ‡Æ±‡Øà‡Æµ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ. ‡Æá‡Æ§‡ÆØ-‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æ© ‡Æ™‡Æ¥‡Æï‡Øç‡Æï‡Æô‡Øç‡Æï‡Æ≥‡Øà ‡Æ§‡Øä‡Æü‡Æ∞‡Æµ‡ØÅ‡ÆÆ‡Øç: ‡Æµ‡Ææ‡Æ∞‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ 150 ‡Æ®‡Æø‡ÆÆ‡Æø‡Æü ‡Æè‡Æ∞‡Øã‡Æ™‡Æø‡Æï‡Øç ‡Æâ‡Æü‡Æ±‡Øç‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø, ‡Æï‡ØÅ‡Æ±‡Øà‡Æ®‡Øç‡Æ§ ‡Æâ‡Æ™‡Øç‡Æ™‡ØÅ ‡Æâ‡Æ£‡Æµ‡ØÅ, ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ© ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§ ‡ÆÆ‡Øá‡Æ≤‡Ææ‡Æ£‡Øç‡ÆÆ‡Øà.",
        'heart_general_tip': "‡Æ™‡Øä‡Æ§‡ØÅ‡Æµ‡Ææ‡Æ© ‡Æï‡ØÅ‡Æ±‡Æø‡Æ™‡Øç‡Æ™‡ØÅ: ‡ÆÆ‡Æ© ‡ÆÖ‡Æ¥‡ØÅ‡Æ§‡Øç‡Æ§‡Æ§‡Øç‡Æ§‡Øà ‡Æï‡ØÅ‡Æ±‡Øà‡Æï‡Øç‡Æï ‡ÆÜ‡Æ¥‡ÆÆ‡Ææ‡Æ© ‡Æö‡ØÅ‡Æµ‡Ææ‡Æö‡ÆÆ‡Øç ‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ ‡Æ§‡Æø‡ÆØ‡Ææ‡Æ©‡Æ§‡Øç‡Æ§‡Øà ‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æá‡Æ§‡ÆØ ‡ÆÜ‡Æ∞‡Øã‡Æï‡Øç‡Æï‡Æø‡ÆØ‡Æ§‡Øç‡Æ§‡Øà ‡ÆÜ‡Æ§‡Æ∞‡Æø‡Æï‡Øç‡Æï 7-9 ‡ÆÆ‡Æ£‡Æø‡Æ®‡Øá‡Æ∞ ‡Æ§‡ØÇ‡Æï‡Øç‡Æï‡Æ§‡Øç‡Æ§‡Øà ‡Æá‡Æ≤‡Æï‡Øç‡Æï‡Ææ‡Æï‡Æï‡Øç ‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'voice_changes': "‡Æï‡ØÅ‡Æ∞‡Æ≤‡Øç ‡ÆÆ‡Ææ‡Æ±‡Øç‡Æ±‡Æô‡Øç‡Æï‡Æ≥‡Øç: ‡Æï‡ØÅ‡Æ±‡Øà‡Æ®‡Øç‡Æ§ ‡ÆÖ‡Æü‡Æø‡Æ™‡Øç‡Æ™‡Æü‡Øà ‡ÆÖ‡Æ§‡Æø‡Æ∞‡Øç‡Æµ‡ØÜ‡Æ£‡Øç (<100 Hz) ‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡ØÅ‡Æü‡Æ©‡Øç ‡Æ§‡Øä‡Æü‡Æ∞‡Øç‡Æ™‡ØÅ‡Æü‡Øà‡ÆØ ‡Æï‡ØÅ‡Æ∞‡Æ≤‡Øç ‡Æ™‡Æø‡Æ∞‡Æö‡Øç‡Æö‡Æø‡Æ©‡Øà‡Æï‡Æ≥‡Øà‡Æï‡Øç ‡Æï‡ØÅ‡Æ±‡Æø‡Æï‡Øç‡Æï‡Æ≤‡Ææ‡ÆÆ‡Øç. ‡Æ™‡Øá‡Æö‡Øç‡Æö‡ØÅ ‡Æö‡Æø‡Æï‡Æø‡Æö‡Øç‡Æö‡Øà‡ÆØ‡Æø‡Æ≤‡Øç ‡Æà‡Æü‡ØÅ‡Æ™‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æ§‡Æø‡Æ©‡Æö‡Æ∞‡Æø ‡Æï‡ØÅ‡Æ∞‡Æ≤‡Øç ‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø‡Æï‡Æ≥‡Øà ‡ÆÆ‡Øá‡Æ±‡Øç‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'vocal_instability': "‡Æï‡ØÅ‡Æ∞‡Æ≤‡Øç ‡ÆÖ‡Æ®‡Æø‡Æ≤‡Øà‡Æ§‡Øç‡Æ§‡Æ©‡Øç‡ÆÆ‡Øà: ‡Æâ‡ÆØ‡Æ∞‡Øç ‡Æú‡Æø‡Æü‡Øç‡Æü‡Æ∞‡Øç (>0.05%) ‡Æï‡ØÅ‡Æ∞‡Æ≤‡Øç ‡Æ®‡Æü‡ØÅ‡Æï‡Øç‡Æï‡Æ§‡Øç‡Æ§‡Øà‡Æï‡Øç ‡Æï‡ØÅ‡Æ±‡Æø‡Æï‡Øç‡Æï‡Æø‡Æ±‡Æ§‡ØÅ, ‡Æá‡Æ§‡ØÅ ‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Æø‡Æ©‡Øç ‡Æí‡Æ∞‡ØÅ ‡Æö‡Ææ‡Æ§‡Øç‡Æ§‡Æø‡ÆØ‡ÆÆ‡Ææ‡Æ© ‡ÆÖ‡Æ±‡Æø‡Æï‡ØÅ‡Æ±‡Æø‡ÆØ‡Ææ‡Æï‡ØÅ‡ÆÆ‡Øç. ‡Æ®‡Æ∞‡ÆÆ‡Øç‡Æ™‡Æø‡ÆØ‡Æ≤‡Øç ‡Æ®‡Æø‡Æ™‡ØÅ‡Æ£‡Æ∞‡Øà ‡ÆÖ‡Æ£‡ØÅ‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æ™‡Øá‡Æö‡Øç‡Æö‡ØÅ ‡Æö‡Æø‡Æï‡Æø‡Æö‡Øç‡Æö‡Øà‡ÆØ‡Øà ‡Æï‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡Æø‡Æ≤‡Øç ‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'parkinsons_high_risk': "‡Æâ‡ÆØ‡Æ∞‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç: ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Æø‡Æ©‡Øç‡Æö‡Æ©‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡Æ£‡Æø‡Æö‡ÆÆ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ. ‡Æá‡ÆØ‡Æï‡Øç‡Æï‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ ‡Æâ‡Æü‡Æ≤‡Øç ‡Æö‡Æø‡Æï‡Æø‡Æö‡Øç‡Æö‡Øà‡ÆØ‡Øà ‡Æ§‡Øä‡Æü‡Æô‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡Æµ‡Ææ‡Æ∞‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ 150 ‡Æ®‡Æø‡ÆÆ‡Æø‡Æü ‡Æ§‡Øà ‡Æö‡Æø ‡Æ™‡Øã‡Æ©‡Øç‡Æ± ‡Æâ‡Æü‡Æ±‡Øç‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø‡Æï‡Æ≥‡Æø‡Æ≤‡Øç ‡Æà‡Æü‡ØÅ‡Æ™‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æ®‡Æ∞‡ÆÆ‡Øç‡Æ™‡Æø‡ÆØ‡Æ≤‡Øç ‡ÆÆ‡Æ§‡Æø‡Æ™‡Øç‡Æ™‡ØÄ‡Æü‡Øç‡Æü‡Øà ‡Æ™‡ØÜ‡Æ±‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'parkinsons_low_risk': "‡Æï‡ØÅ‡Æ±‡Øà‡Æ®‡Øç‡Æ§ ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç: ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÖ‡Æ™‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æï‡ØÅ‡Æ±‡Øà‡Æµ‡Ææ‡Æï ‡Æâ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ. ‡Æí‡Æ∞‡ØÅ‡Æô‡Øç‡Æï‡Æø‡Æ£‡Øà‡Æ™‡Øç‡Æ™‡ØÅ ‡ÆÆ‡Øà‡ÆØ‡Æ™‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æâ‡Æü‡Æ±‡Øç‡Æ™‡ÆØ‡Æø‡Æ±‡Øç‡Æö‡Æø‡Æï‡Æ≥‡ØÅ‡Æü‡Æ©‡Øç (‡Æé.‡Æï‡Ææ., ‡ÆØ‡Øã‡Æï‡Ææ) ‡Æö‡ØÜ‡ÆØ‡Æ≤‡Æø‡Æ≤‡Øç ‡Æá‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æ®‡Æü‡ØÅ‡Æï‡Øç‡Æï‡ÆÆ‡Øç ‡Æ™‡Øã‡Æ©‡Øç‡Æ± ‡ÆÖ‡Æ±‡Æø‡Æï‡ØÅ‡Æ±‡Æø‡Æï‡Æ≥‡Øà ‡Æï‡Æ£‡Øç‡Æï‡Ææ‡Æ£‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
        'parkinsons_general_tip': "‡Æ™‡Øä‡Æ§‡ØÅ‡Æµ‡Ææ‡Æ© ‡Æï‡ØÅ‡Æ±‡Æø‡Æ™‡Øç‡Æ™‡ØÅ: ‡ÆÆ‡Æ§‡Øç‡Æ§‡Æø‡ÆØ‡Æ§‡Æ∞‡Øà‡Æï‡Øç ‡Æï‡Æü‡Æ≤‡Øç ‡Æâ‡Æ£‡Æµ‡ØÅ ‡ÆÆ‡ØÅ‡Æ±‡Øà‡ÆØ‡Øà ‡Æ™‡Æø‡Æ©‡Øç‡Æ™‡Æ±‡Øç‡Æ±‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡Æö‡ÆÆ‡ØÇ‡Æï ‡Æ∞‡ØÄ‡Æ§‡Æø‡ÆØ‡Ææ‡Æï ‡Æö‡ØÜ‡ÆØ‡Æ≤‡Æø‡Æ≤‡Øç ‡Æá‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æµ‡Æø‡Æ¥‡ØÅ‡Æ§‡Æ≤‡Øà‡Æ§‡Øç ‡Æ§‡Æü‡ØÅ‡Æï‡Øç‡Æï ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æµ‡ØÄ‡Æü‡Øç‡Æü‡Øà ‡ÆÆ‡Ææ‡Æ±‡Øç‡Æ±‡Æø‡ÆØ‡ÆÆ‡Øà‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç (‡Æé.‡Æï‡Ææ., ‡Æï‡ÆÆ‡Øç‡Æ™‡Æ≥‡Æô‡Øç‡Æï‡Æ≥‡Øà ‡ÆÖ‡Æï‡Æ±‡Øç‡Æ±‡Æµ‡ØÅ‡ÆÆ‡Øç)."
    }
}

def t(key):
    return translations[st.session_state.language].get(key, key)

def t_input(key):
    return input_translations[st.session_state.language].get(key, key)

def t_insight(key):
    return insights_translations[st.session_state.language].get(key, key)

# ------------------------------------------------
# üé¨ Lottie Animation Loader
# ------------------------------------------------
@st.cache_data(show_spinner=False)
def load_lottieurl(url: str):
    r = requests.get(url)
    if r.status_code != 200:
        return None
    return r.json()

# Load animations
home_animation = load_lottieurl("https://lottie.host/7c7125a7-37ec-44ac-8b8d-11a9b988d3bb/cxtshyITFK.json")
diabetes_animation = load_lottieurl("https://lottie.host/e4d1c1b4-1a6d-4b16-bb28-548abebd7a94/VNnDL3lbvM.json")
heart_animation = load_lottieurl("https://lottie.host/3c4cb70b-8e8c-4c1a-9c5a-fefcbe4e056f/R2BzYbCjCI.json")
parkinson_animation = load_lottieurl("https://lottie.host/760cb2d4-16fa-4899-a53f-95b3c9f784d1/hPl6x8nG6u.json")

# ------------------------------------------------
# ‚öôÔ∏è Load Models
# ------------------------------------------------
working_dir = os.path.dirname(os.path.abspath(__file__))

@st.cache_resource
def load_model_with_scaler(path):
    with open(path, 'rb') as f:
        data = pickle.load(f)
    return data["model"], data["scaler"]

MODEL_DIR = os.path.join(working_dir, 'saved models')
# Load all models with scalers
diabetes_model, diabetes_scaler = load_model_with_scaler(os.path.join(MODEL_DIR, 'diabetes_model.sav'))
heart_model, heart_scaler = load_model_with_scaler(os.path.join(MODEL_DIR, 'heart_disease_model.sav'))
parkinson_model, parkinson_scaler = load_model_with_scaler(os.path.join(MODEL_DIR, 'parkinson_model.sav'))

# ------------------------------------------------
# üåó Theme Customization and Mobile Optimization
# ------------------------------------------------
light_theme = """
<style>
body, .stMarkdown, .stText, p, div, h1, h2, h3, h4, h5, h6 {
    color: #333333 !important;
    background-color: #f5f5f5 !important;
}
[data-testid="stSidebar"] {
    width: 270px;
    background-color: #e0e0e0 !important;
}
.stButton>button {
    background-color: #4CAF50;
    color: white;
}
.footer {
    text-align: center;
    color: #333333;
    margin-top: 50px;
    font-size: 13px;
}
.tooltip {
    position: relative;
    display: inline-block;
    cursor: pointer;
}
.tooltip .tooltiptext {
    visibility: hidden;
    width: 200px;
    background-color: #555;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 5px;
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 50%;
    margin-left: -100px;
    opacity: 0;
    transition: opacity 0.3s;
}
.tooltip:hover .tooltiptext {
    visibility: visible;
    opacity: 1;
}
@media (max-width: 600px) {
    [data-testid="stSidebar"] {
        width: 100%;
    }
    .stButton>button {
        width: 100%;
        font-size: 14px;
    }
    .tooltip .tooltiptext {
        width: 150px;
        margin-left: -75px;
    }
    .stNumberInput, .stSelectbox {
        font-size: 12px;
    }
    .stColumn {
        display: block;
        width: 100%;
    }
}
</style>
"""

dark_theme = """
<style>
body, .stMarkdown, .stText, p, div, h1, h2, h3, h4, h5, h6 {
    color: white !important;
    background-color: #1a1a1a !important;
}
[data-testid="stSidebar"] {
    width: 270px;
    background-color: #2c2c2c !important;
}
.stButton>button {
    background-color: #4CAF50;
    color: white;
}
.footer {
    text-align: center;
    color: white;
    margin-top: 50px;
    font-size: 13px;
}
.tooltip {
    position: relative;
    display: inline-block;
    cursor: pointer;
}
.tooltip .tooltiptext {
    visibility: hidden;
    width: 200px;
    background-color: #ddd;
    color: #333;
    text-align: center;
    border-radius: 6px;
    padding: 5px;
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 50%;
    margin-left: -100px;
    opacity: 0;
    transition: opacity 0.3s;
}
.tooltip:hover .tooltiptext {
    visibility: visible;
    opacity: 1;
}
@media (max-width: 600px) {
    [data-testid="stSidebar"] {
        width: 100%;
    }
    .stButton>button {
        width: 100%;
        font-size: 14px;
    }
    .tooltip .tooltiptext {
        width: 150px;
        margin-left: -75px;
    }
    .stNumberInput, .stSelectbox {
        font-size: 12px;
    }
    .stColumn {
        display: block;
        width: 100%;
    }
}
</style>
"""

# Apply selected theme
if st.session_state.theme == 'Light':
    st.markdown(light_theme, unsafe_allow_html=True)
else:
    st.markdown(dark_theme, unsafe_allow_html=True)

# ------------------------------------------------
# ü©∫ Health Insights Function
# ------------------------------------------------
def get_health_insights(disease, inputs, prediction):
    insights = []
    if disease == "Diabetes":
        pregnancies, glucose, bp, skin, insulin, bmi, dpf, age = inputs
        if glucose > 140:
            insights.append(t_insight('high_glucose'))
        if bmi > 30:
            insights.append(t_insight('obesity_risk'))
        if age > 45:
            insights.append(t_insight('age_diabetes_risk'))
        if pregnancies > 3:
            insights.append(t_insight('pregnancy_risk'))
        if prediction == 1:
            insights.append(t_insight('diabetes_high_risk'))
        else:
            insights.append(t_insight('diabetes_low_risk'))
        insights.append(t_insight('diabetes_general_tip'))
    elif disease == "Heart Disease":
        age, sex, cp, trestbps, chol, fbs, restecg, thalach, exang, oldpeak, slope, ca, thal = inputs
        if trestbps > 140:
            insights.append(t_insight('hypertension_risk'))
        if chol > 240:
            insights.append(t_insight('high_cholesterol'))
        if exang == 1:
            insights.append(t_insight('angina_warning'))
        if age > 55:
            insights.append(t_insight('age_heart_risk'))
        if prediction == 1:
            insights.append(t_insight('heart_high_risk'))
        else:
            insights.append(t_insight('heart_low_risk'))
        insights.append(t_insight('heart_general_tip'))
    elif disease == "Parkinsons":
        fo = inputs[0]
        jitter = inputs[3]
        if fo < 100:
            insights.append(t_insight('voice_changes'))
        if jitter > 0.05:
            insights.append(t_insight('vocal_instability'))
        if prediction == 1:
            insights.append(t_insight('parkinsons_high_risk'))
        else:
            insights.append(t_insight('parkinsons_low_risk'))
        insights.append(t_insight('parkinsons_general_tip'))
    return insights

# ------------------------------------------------
# üìä Generate PDF Report
# ------------------------------------------------
def generate_pdf_report(disease, inputs, diagnosis, insights):
    buffer = BytesIO()
    c = canvas.Canvas(buffer, pagesize=letter)
    c.setFont("Helvetica", 12)
    c.drawString(100, 750, f"Health Assistant - {t(disease)} Prediction Report")
    c.drawString(100, 730, f"Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    c.drawString(100, 710, t("Prediction Result:"))
    c.drawString(120, 690, diagnosis)
    c.drawString(100, 670, t("Health Insights:"))
    y = 650
    for insight in insights:
        c.drawString(120, y, insight[:80])  # Truncate for simplicity
        y -= 20
    c.drawString(100, y-20, t("Inputs Provided:"))
    if disease == "Diabetes":
        labels = ["Pregnancies", "Glucose", "Blood Pressure", "Skin Thickness", "Insulin", "BMI", "Diabetes Pedigree Function", "Age"]
        for i, (label, value) in enumerate(zip(labels, inputs)):
            c.drawString(120, y-40-i*20, f"{t_input(label)}: {value}")
    elif disease == "Heart Disease":
        labels = ["Age", "Sex", "Chest Pain types", "Resting Blood Pressure", "Serum Cholestoral", "Fasting Blood Sugar", "Resting ECG", "Maximum Heart Rate", "Exercise Induced Angina", "ST depression", "Slope of ST segment", "Major vessels", "Thalassemia"]
        for i, (label, value) in enumerate(zip(labels, inputs)):
            c.drawString(120, y-40-i*20, f"{t_input(label)}: {value}")
    elif disease == "Parkinsons":
        labels = ["MDVP:Fo(Hz)", "MDVP:Fhi(Hz)", "MDVP:Flo(Hz)", "MDVP:Jitter(%)", "MDVP:Jitter(Abs)", "MDVP:RAP", "MDVP:PPQ", "Jitter:DDP", "MDVP:Shimmer", "MDVP:Shimmer(dB)", "Shimmer:APQ3", "Shimmer:APQ5", "MDVP:APQ", "Shimmer:DDA", "NHR", "HNR", "RPDE", "DFA", "spread1", "spread2", "D2", "PPE"]
        for i, (label, value) in enumerate(zip(labels, inputs)):
            c.drawString(120, y-40-i*20, f"{t_input(label)}: {value}")
    c.showPage()
    c.save()
    buffer.seek(0)
    return buffer

# ------------------------------------------------
# üß≠ Sidebar Menu
# ------------------------------------------------
with st.sidebar:
    # Language selection
    language = st.selectbox("Select Language / ‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç / ‡ÆÆ‡Øä‡Æ¥‡Æø‡ÆØ‡Øà‡Æ§‡Øç ‡Æ§‡Øá‡Æ∞‡Øç‡Æ®‡Øç‡Æ§‡ØÜ‡Æü‡ØÅ", ["English", "Hindi", "Tamil"])
    if language != st.session_state.language:
        st.session_state.language = language
        st.rerun()
    
    # Theme selection
    theme_choice = st.selectbox(t("Select Theme"), ["Dark", "Light"], index=0 if st.session_state.theme == 'Dark' else 1)
    if theme_choice != st.session_state.theme:
        st.session_state.theme = theme_choice
        st.rerun()
    
    selected = option_menu(
        t('title'),
        ['Home', 'About', 'BMI Calculator', 'Diabetes Prediction', 'Heart Disease Prediction', 'Parkinsons Prediction', 'Feedback'],
        icons=['house', 'info-circle', 'calculator', 'activity', 'heart', 'brain', 'envelope'],
        default_index=0
    )

# ------------------------------------------------
# üè† Home Page
# ------------------------------------------------
if selected == "Home":
    st.title(t("title"))
    st.subheader(t("welcome"))
    if home_animation:
        st_lottie(home_animation, height=300, key="home")
    st.markdown(f"""
    <h4>{t('predict_diseases')}</h4>
    <ul>
        <li>ü©∏ {t('diabetes')}</li>
        <li>‚ù§Ô∏è {t('heart_disease')}</li>
        <li>üß† {t('parkinsons')}</li>
    </ul>
    <p>üí° {t('enter_details')}</p>
    <p>‚úÖ {t('tip')}</p>
    <h4>{t('history')}</h4>
    <p>{t('no_history')}</p>
    """, unsafe_allow_html=True)

# ------------------------------------------------
# ‚ÑπÔ∏è About Page
# ------------------------------------------------
elif selected == "About":
    st.title(t("about_title"))
    if home_animation:
        st_lottie(home_animation, height=200, key="about")
    st.markdown(f"""
    ### {t('about_title')}
    {t('about_desc')}
    - ü©∏ **{t('diabetes')}**: Assesses risk based on factors like glucose levels and BMI.
    - ‚ù§Ô∏è **{t('heart_disease')}**: Evaluates heart health using metrics like cholesterol and blood pressure.
    - üß† **{t('parkinsons')}**: Analyzes voice and motor-related features to detect early signs.

    ### Purpose
    The goal is to empower users with instant health insights, enabling early detection and proactive health management. The application includes a BMI calculator, visualizations, personalized health tips, and report generation.

    ### Technology
    - **Machine Learning Models**: Trained models for precise predictions.
    - **Streamlit**: Powers the interactive web interface.
    - **Lottie Animations**: Enhances user experience with engaging visuals.
    - **Chart.js**: Provides insightful visualizations of health data.
    - **Theme Customization**: Toggle between light and dark modes for accessibility.

    ### Resources
    - [CDC Diabetes Resources](https://www.cdc.gov/diabetes): Learn about diabetes prevention and management.
    - [American Heart Association](https://www.heart.org): Heart health tips and guidelines.
    - [Parkinson‚Äôs Foundation](https://www.parkinson.org): Support and information for Parkinson‚Äôs disease.
    - [Mayo Clinic](https://www.mayoclinic.org): General health advice and disease information.

    ### Credits
    - **Developer**: Built with ‚ù§Ô∏è by a passionate developer to make healthcare accessible.
    - **Inspired by**: xAI's mission to advance human scientific discovery.
    - **Version**: 1.3 (October 2025)

    <p>üí° <b>Note</b>: This tool is for informational purposes only. Always consult a healthcare professional for medical advice.</p>
    """, unsafe_allow_html=True)

# ------------------------------------------------
# ‚öñÔ∏è BMI Calculator
# ------------------------------------------------
elif selected == "BMI Calculator":
    st.title(t("bmi_title"))
    st.write(t("bmi_desc"))
    height = st.number_input(t_input("Height (cm):"), min_value=50.0, max_value=250.0, value=170.0)
    weight = st.number_input(t_input("Weight (kg):"), min_value=10.0, max_value=200.0, value=65.0)
    if st.button(t_input("Calculate BMI")):
        bmi = weight / ((height / 100) ** 2)
        st.subheader(f"{t_input('Your BMI is:')} {bmi:.2f}")
        if bmi < 18.5:
            st.warning(t_input("You are underweight. Eat nutrient-rich foods üçûüçó"))
        elif 18.5 <= bmi <= 24.9:
            st.success(t_input("You are healthy! Keep maintaining a balanced diet ü•ó"))
        elif 25 <= bmi <= 29.9:
            st.warning(t_input("You are overweight. Exercise regularly üèÉ‚Äç‚ôÇÔ∏è"))
        else:
            st.error(t_input("You are obese. Please consult a doctor and plan weight management ‚öïÔ∏è"))

# ------------------------------------------------
# üíâ Diabetes Prediction
# ------------------------------------------------
elif selected == 'Diabetes Prediction':
    st.title(t('diabetes_pred'))
    if diabetes_animation:
        st_lottie(diabetes_animation, height=200, key="diabetes")
    
    st.markdown(f"### {t('input_order')}")
    st.markdown("""
    1. Pregnancies
    2. Glucose
    3. Blood Pressure
    4. Skin Thickness
    5. Insulin
    6. BMI
    7. Diabetes Pedigree Function
    8. Age
    """)
    
    col1, col2, col3 = st.columns(3)
    with col1:
        st.markdown(f'<div class="tooltip">1. {t_input("Pregnancies")}<span class="tooltiptext">{t("Number of times pregnant (0-20)")}</span></div>', unsafe_allow_html=True)
        Pregnancies = st.number_input(t_input("Pregnancies"), min_value=0, max_value=20, value=0, key="pregnancies")
        st.markdown(f'<div class="tooltip">2. {t_input("Glucose")}<span class="tooltiptext">{t("Plasma glucose concentration (0-300 mg/dL)")}</span></div>', unsafe_allow_html=True)
        Glucose = st.number_input(t_input("Glucose"), min_value=0, max_value=300, value=0, key="glucose")
        st.markdown(f'<div class="tooltip">3. {t_input("Blood Pressure")}<span class="tooltiptext">{t("Diastolic blood pressure (mmHg)")}</span></div>', unsafe_allow_html=True)
        BloodPressure = st.number_input(t_input("Blood Pressure"), min_value=0, max_value=200, value=0, key="bp")
    with col2:
        st.markdown(f'<div class="tooltip">4. {t_input("Skin Thickness")}<span class="tooltiptext">{t("Triceps skin fold thickness (mm)")}</span></div>', unsafe_allow_html=True)
        SkinThickness = st.number_input(t_input("Skin Thickness"), min_value=0, max_value=100, value=0, key="skin")
        st.markdown(f'<div class="tooltip">5. {t_input("Insulin")}<span class="tooltiptext">{t("2-Hour serum insulin (mu U/ml)")}</span></div>', unsafe_allow_html=True)
        Insulin = st.number_input(t_input("Insulin"), min_value=0, max_value=900, value=0, key="insulin")
        st.markdown(f'<div class="tooltip">6. {t_input("BMI")}<span class="tooltiptext">{t("Body Mass Index (weight in kg/(height in m)^2)")}</span></div>', unsafe_allow_html=True)
        BMI = st.number_input(t_input("BMI"), min_value=0.0, max_value=70.0, value=0.0, key="bmi")
    with col3:
        st.markdown(f'<div class="tooltip">7. {t_input("Diabetes Pedigree Function")}<span class="tooltiptext">{t("Diabetes pedigree function (0-2.5)")}</span></div>', unsafe_allow_html=True)
        DiabetesPedigreeFunction = st.number_input(t_input("Diabetes Pedigree Function"), min_value=0.0, max_value=2.5, value=0.0, key="dpf")
        st.markdown(f'<div class="tooltip">8. {t_input("Age")}<span class="tooltiptext">{t("Age in years (20-80)")}</span></div>', unsafe_allow_html=True)
        Age = st.number_input(t_input("Age"), min_value=0, max_value=80, value=0, key="age")

    if st.button(t("Diabetes Test Result")):
        input_data = [Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age]
        if any(x < 0 for x in input_data) or Glucose > 300 or BloodPressure > 200 or Age > 80:
            st.error(t('error_input'))
        else:
            try:
               with st.spinner(t('Analyzing your data...')):
                    input_arr = np.asarray(input_data).reshape(1, -1)
                    input_scaled = diabetes_scaler.transform(input_arr)
                    prob = diabetes_model.predict_proba(input_scaled)[0][1] * 100

                    if prob >= 60:
                       diagnosis = f"{t('You have a')} {prob:.1f}% {t('risk of Diabetes.')}"
                       st.error(diagnosis)
                    else:
                        diagnosis = f"{t('You are healthy! Low risk of Diabetes.')} ({prob:.1f}% {t('risk')})"
                        st.success(diagnosis)
                    
                    # Generate health insights
                    insights = get_health_insights("Diabetes", input_data, 1 if probability >= 60 else 0)
                    st.subheader(t("health_insights"))
                    for insight in insights:
                        st.write(f"üí° {insight}")

                    # Generate and download PDF report
                    pdf_buffer = generate_pdf_report("Diabetes", input_data, diagnosis, insights)
                    st.download_button(
                        label=t("download_report"),
                        data=pdf_buffer,
                        file_name="diabetes_report.pdf",
                        mime="application/pdf"
                    )
            except Exception as e:
                st.error(f"Prediction failed: {str(e)}")
                print(f"Exception: {e}")

# ------------------------------------------------
# ‚ù§Ô∏è Heart Disease Prediction
# ------------------------------------------------
elif selected == 'Heart Disease Prediction':
    st.title(t('heart_pred'))
    if heart_animation:
        st_lottie(heart_animation, height=200, key="heart")
    
    st.markdown(f"### {t('input_order')}")
    st.markdown("""
    1. Age
    2. Sex (1 = Male, 0 = Female)
    3. Chest Pain Type (0-3)
    4. Resting Blood Pressure
    5. Serum Cholesterol
    6. Fasting Blood Sugar (> 120 mg/dl, 1 = Yes, 0 = No)
    7. Resting ECG (0-2)
    8. Maximum Heart Rate
    9. Exercise Induced Angina (1 = Yes, 0 = No)
    10. ST Depression
    11. Slope of ST Segment (0-2)
    12. Number of Major Vessels (0-3)
    13. Thalassemia (0-3)
    """)
    
    col1, col2, col3 = st.columns(3)
    with col1:
        st.markdown(f'<div class="tooltip">1. {t_input("Age")}<span class="tooltiptext">{t("Age in years (20-80)")}</span></div>', unsafe_allow_html=True)
        Age = st.number_input(t_input("Age"), min_value=0, max_value=80, value=0, key="age_heart")
        st.markdown(f'<div class="tooltip">2. {t_input("Sex")}<span class="tooltiptext">{t("Sex (1 = Male, 0 = Female)")}</span></div>', unsafe_allow_html=True)
        Sex = st.number_input(t_input("Sex"), min_value=0, max_value=1, value=0, key="sex")
        st.markdown(f'<div class="tooltip">3. {t_input("Chest Pain types")}<span class="tooltiptext">{t("Chest Pain Type (0-3)")}</span></div>', unsafe_allow_html=True)
        ChestPainType = st.number_input(t_input("Chest Pain types"), min_value=0, max_value=3, value=0, key="cp")
    with col2:
        st.markdown(f'<div class="tooltip">4. {t_input("Resting Blood Pressure")}<span class="tooltiptext">{t("Resting BP (mmHg)")}</span></div>', unsafe_allow_html=True)
        RestingBP = st.number_input(t_input("Resting Blood Pressure"), min_value=0, max_value=200, value=0, key="trestbps")
        st.markdown(f'<div class="tooltip">5. {t_input("Serum Cholestoral")}<span class="tooltiptext">{t("Serum Cholesterol (mg/dl)")}</span></div>', unsafe_allow_html=True)
        Cholesterol = st.number_input(t_input("Serum Cholestoral"), min_value=0, max_value=600, value=0, key="chol")
        st.markdown(f'<div class="tooltip">6. {t_input("Fasting Blood Sugar")}<span class="tooltiptext">{t("Fasting BS (> 120 mg/dl, 1 = Yes, 0 = No)")}</span></div>', unsafe_allow_html=True)
        FastingBS = st.number_input(t_input("Fasting Blood Sugar"), min_value=0, max_value=1, value=0, key="fbs")
    with col3:
        st.markdown(f'<div class="tooltip">7. {t_input("Resting ECG")}<span class="tooltiptext">{t("Resting ECG (0-2)")}</span></div>', unsafe_allow_html=True)
        RestingECG = st.number_input(t_input("Resting ECG"), min_value=0, max_value=2, value=0, key="restecg")
        st.markdown(f'<div class="tooltip">8. {t_input("Maximum Heart Rate")}<span class="tooltiptext">{t("Maximum Heart Rate (bpm)")}</span></div>', unsafe_allow_html=True)
        MaxHeartRate = st.number_input(t_input("Maximum Heart Rate"), min_value=0, max_value=250, value=0, key="thalach")
        st.markdown(f'<div class="tooltip">9. {t_input("Exercise Induced Angina")}<span class="tooltiptext">{t("Exercise Angina (1 = Yes, 0 = No)")}</span></div>', unsafe_allow_html=True)
        ExerciseAngina = st.number_input(t_input("Exercise Induced Angina"), min_value=0, max_value=1, value=0, key="exang")
    with col1:
        st.markdown(f'<div class="tooltip">10. {t_input("ST depression")}<span class="tooltiptext">{t("ST Depression induced by exercise")}</span></div>', unsafe_allow_html=True)
        STdepression = st.number_input(t_input("ST depression"), min_value=0.0, max_value=6.0, value=0.0, key="oldpeak")
        st.markdown(f'<div class="tooltip">11. {t_input("Slope of ST segment")}<span class="tooltiptext">{t("Slope of ST Segment (0-2)")}</span></div>', unsafe_allow_html=True)
        Slope = st.number_input(t_input("Slope of ST segment"), min_value=0, max_value=2, value=0, key="slope")
    with col2:
        st.markdown(f'<div class="tooltip">12. {t_input("Major vessels")}<span class="tooltiptext">{t("Number of Major Vessels (0-3)")}</span></div>', unsafe_allow_html=True)
        MajorVessels = st.number_input(t_input("Major vessels"), min_value=0, max_value=3, value=0, key="ca")
        st.markdown(f'<div class="tooltip">13. {t_input("Thalassemia")}<span class="tooltiptext">{t("Thalassemia (0-3)")}</span></div>', unsafe_allow_html=True)
        Thal = st.number_input(t_input("Thalassemia"), min_value=0, max_value=3, value=0, key="thal")

    if st.button(t("Heart Disease Test Result")):
        input_data = [Age, Sex, ChestPainType, RestingBP, Cholesterol, FastingBS, RestingECG, MaxHeartRate, ExerciseAngina, STdepression, Slope, MajorVessels, Thal]
        if any(x < 0 for x in input_data) or RestingBP > 200 or Cholesterol > 600 or MaxHeartRate > 250 or Age > 80:
            st.error(t('error_input'))
        else:
            try:
                with st.spinner(t('Analyzing your data...')):
                     input_arr = np.asarray(input_data).reshape(1, -1)
                     input_scaled = heart_scaler.transform(input_arr)
                     prob = heart_model.predict_proba(input_scaled)[0][1] * 100

                     if prob >= 50:
                         diagnosis = f"{t('You have a')} {prob:.1f}% {t('risk of Heart Disease.')}"
                         st.error(diagnosis)
                     else:
                         diagnosis = f"{t('You are healthy! Low risk of Heart Disease.')} ({prob:.1f}% {t('risk')})"
                         st.success(diagnosis)
                    
                    # Generate health insights
                     insights = get_health_insights("Heart Disease", input_data, 1 if probability >= 60 else 0)
                     st.subheader(t("health_insights"))
                     for insight in insights:
                        st.write(f"üí° {insight}")

                    # Generate and download PDF report
                     pdf_buffer = generate_pdf_report("Heart Disease", input_data, diagnosis, insights)
                     st.download_button(
                        label=t("download_report"),
                        data=pdf_buffer,
                        file_name="heart_disease_report.pdf",
                        mime="application/pdf"
                    )
            except Exception as e:
                st.error(f"Prediction failed: {str(e)}")
                print(f"Exception: {e}")

# ------------------------------------------------
# üß† Parkinson's Prediction
# ------------------------------------------------
elif selected == 'Parkinsons Prediction':
    st.title(t('parkinsons_pred'))
    if parkinson_animation:
        st_lottie(parkinson_animation, height=200, key="parkinson")
    
    st.markdown(f"### {t('input_order')}")
    st.markdown("""
    1. MDVP:Fo(Hz)
    2. MDVP:Fhi(Hz)
    3. MDVP:Flo(Hz)
    4. MDVP:Jitter(%)
    5. MDVP:Jitter(Abs)
    6. MDVP:RAP
    7. MDVP:PPQ
    8. Jitter:DDP
    9. MDVP:Shimmer
    10. MDVP:Shimmer(dB)
    11. Shimmer:APQ3
    12. Shimmer:APQ5
    13. MDVP:APQ
    14. Shimmer:DDA
    15. NHR
    16. HNR
    17. RPDE
    18. DFA
    19. spread1
    20. spread2
    21. D2
    22. PPE
    """)
    
    col1, col2, col3 = st.columns(3)
    with col1:
        st.markdown(f'<div class="tooltip">1. {t_input("MDVP:Fo(Hz)")}<span class="tooltiptext">{t("Fundamental frequency in Hz")}</span></div>', unsafe_allow_html=True)
        fo = st.number_input(t_input("MDVP:Fo(Hz)"), min_value=0.0, max_value=1000.0, value=0.0, key="fo")
        st.markdown(f'<div class="tooltip">2. {t_input("MDVP:Fhi(Hz)")}<span class="tooltiptext">{t("Maximum vocal frequency in Hz")}</span></div>', unsafe_allow_html=True)
        fhi = st.number_input(t_input("MDVP:Fhi(Hz)"), min_value=0.0, max_value=1000.0, value=0.0, key="fhi")
        st.markdown(f'<div class="tooltip">3. {t_input("MDVP:Flo(Hz)")}<span class="tooltiptext">{t("Minimum vocal frequency in Hz")}</span></div>', unsafe_allow_html=True)
        flo = st.number_input(t_input("MDVP:Flo(Hz)"), min_value=0.0, max_value=1000.0, value=0.0, key="flo")
    with col2:
        st.markdown(f'<div class="tooltip">4. {t_input("MDVP:Jitter(%)")}<span class="tooltiptext">{t("Jitter percentage")}</span></div>', unsafe_allow_html=True)
        jitter_percent = st.number_input(t_input("MDVP:Jitter(%)"), min_value=0.0, max_value=10.0, value=0.0, key="jitter_percent")
        st.markdown(f'<div class="tooltip">5. {t_input("MDVP:Jitter(Abs)")}<span class="tooltiptext">{t("Jitter in absolute terms")}</span></div>', unsafe_allow_html=True)
        jitter_abs = st.number_input(t_input("MDVP:Jitter(Abs)"), min_value=0.0, max_value=0.1, value=0.0, key="jitter_abs")
        st.markdown(f'<div class="tooltip">6. {t_input("MDVP:RAP")}<span class="tooltiptext">{t("Relative amplitude perturbation")}</span></div>', unsafe_allow_html=True)
        rap = st.number_input(t_input("MDVP:RAP"), min_value=0.0, max_value=0.1, value=0.0, key="rap")
    with col3:
        st.markdown(f'<div class="tooltip">7. {t_input("MDVP:PPQ")}<span class="tooltiptext">{t("Five-point period perturbation quotient")}</span></div>', unsafe_allow_html=True)
        ppq = st.number_input(t_input("MDVP:PPQ"), min_value=0.0, max_value=0.1, value=0.0, key="ppq")
        st.markdown(f'<div class="tooltip">8. {t_input("Jitter:DDP")}<span class="tooltiptext">{t("Average absolute difference of differences")}</span></div>', unsafe_allow_html=True)
        ddp = st.number_input(t_input("Jitter:DDP"), min_value=0.0, max_value=0.1, value=0.0, key="ddp")
        st.markdown(f'<div class="tooltip">9. {t_input("MDVP:Shimmer")}<span class="tooltiptext">{t("Shimmer percentage")}</span></div>', unsafe_allow_html=True)
        shimmer = st.number_input(t_input("MDVP:Shimmer"), min_value=0.0, max_value=10.0, value=0.0, key="shimmer")
    with col1:
        st.markdown(f'<div class="tooltip">10. {t_input("MDVP:Shimmer(dB)")}<span class="tooltiptext">{t("Shimmer in decibels")}</span></div>', unsafe_allow_html=True)
        shimmer_db = st.number_input(t_input("MDVP:Shimmer(dB)"), min_value=0.0, max_value=5.0, value=0.0, key="shimmer_db")
        st.markdown(f'<div class="tooltip">11. {t_input("Shimmer:APQ3")}<span class="tooltiptext">{t("Three-point amplitude perturbation quotient")}</span></div>', unsafe_allow_html=True)
        apq3 = st.number_input(t_input("Shimmer:APQ3"), min_value=0.0, max_value=0.1, value=0.0, key="apq3")
        st.markdown(f'<div class="tooltip">12. {t_input("Shimmer:APQ5")}<span class="tooltiptext">{t("Five-point amplitude perturbation quotient")}</span></div>', unsafe_allow_html=True)
        apq5 = st.number_input(t_input("Shimmer:APQ5"), min_value=0.0, max_value=0.1, value=0.0, key="apq5")
    with col2:
        st.markdown(f'<div class="tooltip">13. {t_input("MDVP:APQ")}<span class="tooltiptext">{t("Average amplitude perturbation quotient")}</span></div>', unsafe_allow_html=True)
        apq = st.number_input(t_input("MDVP:APQ"), min_value=0.0, max_value=0.1, value=0.0, key="apq")
        st.markdown(f'<div class="tooltip">14. {t_input("Shimmer:DDA")}<span class="tooltiptext">{t("Average absolute differences of amplitudes")}</span></div>', unsafe_allow_html=True)
        dda = st.number_input(t_input("Shimmer:DDA"), min_value=0.0, max_value=0.1, value=0.0, key="dda")
        st.markdown(f'<div class="tooltip">15. {t_input("NHR")}<span class="tooltiptext">{t("Noise-to-harmonics ratio")}</span></div>', unsafe_allow_html=True)
        nhr = st.number_input(t_input("NHR"), min_value=0.0, max_value=0.5, value=0.0, key="nhr")
    with col3:
        st.markdown(f'<div class="tooltip">16. {t_input("HNR")}<span class="tooltiptext">{t("Harmonics-to-noise ratio")}</span></div>', unsafe_allow_html=True)
        hnr = st.number_input(t_input("HNR"), min_value=0.0, max_value=50.0, value=0.0, key="hnr")
        st.markdown(f'<div class="tooltip">17. {t_input("RPDE")}<span class="tooltiptext">{t("Recurrence period density entropy")}</span></div>', unsafe_allow_html=True)
        rpde = st.number_input(t_input("RPDE"), min_value=0.0, max_value=1.0, value=0.0, key="rpde")
        st.markdown(f'<div class="tooltip">18. {t_input("DFA")}<span class="tooltiptext">{t("Detrended fluctuation analysis")}</span></div>', unsafe_allow_html=True)
        dfa = st.number_input(t_input("DFA"), min_value=0.0, max_value=1.0, value=0.0, key="dfa")
    with col1:
        st.markdown(f'<div class="tooltip">19. {t_input("spread1")}<span class="tooltiptext">{t("Non-linear measure of fundamental frequency variation")}</span></div>', unsafe_allow_html=True)
        spread1 = st.number_input(t_input("spread1"), min_value=0.0, max_value=1.0, value=0.0, key="spread1")
        st.markdown(f'<div class="tooltip">20. {t_input("spread2")}<span class="tooltiptext">{t("Second nonlinear measure of variation")}</span></div>', unsafe_allow_html=True)
        spread2 = st.number_input(t_input("spread2"), min_value=0.0, max_value=1.0, value=0.0, key="spread2")
        st.markdown(f'<div class="tooltip">21. {t_input("D2")}<span class="tooltiptext">{t("Correlation dimension")}</span></div>', unsafe_allow_html=True)
        d2 = st.number_input(t_input("D2"), min_value=0.0, max_value=5.0, value=0.0, key="d2")
    with col2:
        st.markdown(f'<div class="tooltip">22. {t_input("PPE")}<span class="tooltiptext">{t("Pitch period entropy")}</span></div>', unsafe_allow_html=True)
        ppe = st.number_input(t_input("PPE"), min_value=0.0, max_value=1.0, value=0.0, key="ppe")

    if st.button(t("Parkinson‚Äôs Test Result")):
        input_data = [fo, fhi, flo, jitter_percent, jitter_abs, rap, ppq, ddp, shimmer, shimmer_db, apq3, apq5, apq, dda, nhr, hnr, rpde, dfa, spread1, spread2, d2, ppe]
        if any(x < 0 for x in input_data):
            st.error(t('error_input'))
        else:
            try:
                with st.spinner(t('Analyzing your data...')):
                     input_arr = np.asarray(input_data).reshape(1, -1)
                     input_scaled = parkinson_scaler.transform(input_arr)
                     prob = parkinson_model.predict_proba(input_scaled)[0][1] * 100

                     if prob >= 50:
                         diagnosis = f"{t('You have a')} {prob:.1f}% {t('risk of Parkinson\'s Disease.')}"
                         st.error(diagnosis)
                     else:
                         diagnosis = f"{t('You are healthy! Low risk of Parkinson\'s.')} ({prob:.1f}% {t('risk')})"
                         st.success(diagnosis) 
                    
                    # Generate health insights
                     insights = get_health_insights("Parkinsons", input_data, 1 if probability >= 60 else 0)
                     st.subheader(t("health_insights"))
                     for insight in insights:
                        st.write(f"üí° {insight}")

                    # Generate and download PDF report
                     pdf_buffer = generate_pdf_report("Parkinsons", input_data, diagnosis, insights)
                     st.download_button(
                        label=t("download_report"),
                        data=pdf_buffer,
                        file_name="parkinsons_report.pdf",
                        mime="application/pdf"
                    )
            except Exception as e:
                st.error(f"Prediction failed: {str(e)}")
                print(f"Exception: {e}")

# ------------------------------------------------
# üìù Feedback Section
# ------------------------------------------------
elif selected == 'Feedback':
    st.title(t("feedback_title"))
    st.write(t("feedback_desc"))
    feedback = st.text_area("Your Feedback", height=200)
    if st.button(t("submit_feedback")):
        st.success(t("feedback_success"))
        st.write("Feedback submitted: ", feedback)

# ------------------------------------------------
# üìå Footer
# ------------------------------------------------
st.markdown('<div class="footer">¬© 2025 Health Assistant | Built with ‚ù§Ô∏è | Version 1.3</div>', unsafe_allow_html=True)